revision jun copyright jive software rights reserved licensed apache license version license file compliance license copy license http apache org licenses license required applicable law agreed writing software distributed license distributed basis warranties conditions kind express implied license specific language governing permissions limitations license org jivesoftware smack util org jivesoftware smack util collect ions collections abstract map entry abstractmapentry java util special ized specialized map size limited lru algorithm optional expiration time cache items map thread safe algorithm cache hash map hashmap main tained maintained fast object lookup linked lists main tained maintained objects order accessed cache objects order originally cache objects cache wrapped cache object cacheobject main tains maintains pieces pointer node linked list main tains maintains accessed order object keeping reference node avoid linear scans linked list pointer node linked list main tains maintains age object cache keeping reference node avoid linear scans linked list object cache hash lookup performed reference cache object cacheobject wraps real object object sub sequently subsequently moved front accessed linked list cache clean ups cleanups performed cache deletion expiration performed needed author matt tucker cache map map values stored map cache object cacheobject map linked list main tain maintain order cache objects accessed linked list linkedlist last accessed list lastaccessedlist linked list main tain maintain time cache objects init ially initially cache oldest linked list linkedlist age list agelist maximum number items cache hold max cache size maxcachesize maximum length time objects exist cache exp iring expiring max lifetime maxlifetime main tain maintain number cache hits misses cache hit occurs time method called cache requested object cache represents occurence keeping track cache hits misses measure efficient cache higher per centage percentage hits efficient cache hits cachehits cache misses cachemisses create cache maximum size cache bytes maximum lifetime objects param max size maxsize maximum number objects cache hold cache max size param max lifetime maxlifetime maximum amount time objects exist cache deleted objects expire cache max size maxsize max lifetime maxlifetime max size maxsize illegal argument exception illegalargumentexception max cache size max cache size maxcachesize max size maxsize max lifetime maxlifetime max lifetime maxlifetime primary data structure hash map capacity small cases bigger map hash map hashmap cache object cacheobject last accessed list lastaccessedlist linked list linkedlist age list agelist linked list linkedlist key old value oldvalue delete entry exists map contains key containskey key old value oldvalue remove key cache object cacheobject cache object cacheobject cache object cacheobject map key cache object cacheobject entry cache order list store cache order list entry look ups lookups cache object cacheobject last accessed list node lastaccessedlistnode last accessed list lastaccessedlist add first addfirst key add object age list linked list node linkedlistnode age node agenode age list agelist add first addfirst key age node agenode timestamp system current time millis currenttimemillis cache object cacheobject age list node agelistnode age node agenode cache full remove cache entries full cull cache cullcache old value oldvalue object key clear entries cache longer maximum defined age delete expired entries deleteexpiredentries cache object cacheobject cache object cacheobject map key cache object cacheobject object didn exist cache increment cache misses cache misses cachemisses remove object current place cache order list insert front list cache object cacheobject last accessed list node lastaccessedlistnode remove last accessed list lastaccessedlist add first addfirst cache object cacheobject last accessed list node lastaccessedlistnode object exists cache increment cache hits increment object read count cache hits cachehits cache object cacheobject read count readcount cache object cacheobject object remove object key remove key remove operation flag coherence remove caused cache internal processing eviction loading remove object key internal noinspection suspicious method calls suspiciousmethodcalls cache object cacheobject cache object cacheobject map remove key object cache remove cache object cacheobject remove cache order list cache object cacheobject last accessed list node lastaccessedlistnode remove cache object cacheobject age list node agelistnode remove remove references linked list nodes cache object cacheobject age list node agelistnode cache object cacheobject last accessed list node lastaccessedlistnode cache object cacheobject object clear object map key set keyset to array toarray object key remove key reset containers map clear last accessed list lastaccessedlist clear age list agelist clear cache hits cachehits cache misses cachemisses size clear entries cache longer maximum defined age delete expired entries deleteexpiredentries map size is empty isempty clear entries cache longer maximum defined age delete expired entries deleteexpiredentries map is empty isempty collection values clear entries cache longer maximum defined age delete expired entries deleteexpiredentries collections unmodifiable collection unmodifiablecollection abstract collection abstractcollection collection cache object cacheobject values map values iterator iterator iterator iterator cache object cacheobject values iterator has next hasnext has next hasnext object remove remove size values size contains key containskey object key clear entries cache longer maximum defined age delete expired entries deleteexpiredentries map contains key containskey key put all putall map map entry entry map entry set entryset entry get value getvalue converted normal object form cache object cacheobject noinspection unchecked cache object cacheobject object entry get key getkey contains value containsvalue object clear entries cache longer maximum defined age delete expired entries deleteexpiredentries noinspection unchecked cache object cacheobject cache object cacheobject cache object cacheobject map contains value containsvalue cache object cacheobject map entry entry set entryset warning method returns cache object cacheobject instances objects form cache clear entries cache longer maximum defined age delete expired entries deleteexpiredentries abstract set abstractset map entry map entry cache object cacheobject map entry set entryset iterator entry iterator iterator entry iterator entry cache object cacheobject iterator has next hasnext has next hasnext entry map entry cache object cacheobject entry abstract map entry abstractmapentry entry get key getkey entry get value getvalue object override set value setvalue unsupported operation exception unsupportedoperationexception remove remove size size key set keyset clear entries cache longer maximum defined age delete expired entries deleteexpiredentries collections unmodifiable set unmodifiableset map key set keyset get cache hits getcachehits cache hits cachehits get cache misses getcachemisses cache misses cachemisses get max cache size getmaxcachesize max cache size maxcachesize set max cache size setmaxcachesize max cache size maxcachesize max cache size maxcachesize max cache size maxcachesize max size smaller current cache size delete inf req uently infrequently items cull cache cullcache get max lifetime getmaxlifetime max lifetime maxlifetime set max lifetime setmaxlifetime max lifetime maxlifetime max lifetime maxlifetime max lifetime maxlifetime clears entries cache entries older maximum defined age delete expired entries deleteexpiredentries check expiration turned max lifetime maxlifetime remove entries remove objects linked list longer avoid hash look ups lookups objects str ictly strictly neccessary linked list node linkedlistnode node age list agelist get last getlast entries age list node determine expire time expiretime moment time elements expire cache easy check expire time greater expire time expire time expiretime system current time millis currenttimemillis max lifetime maxlifetime expire time expiretime node timestamp remove node object system err println error attempting remove node object to string tostring cache object cacheobject cache remove age list agelist node remove node node age list agelist get last getlast entries age list node removes elements cache size greater equal maximum allowed size cache empty cull cache cullcache check max cache size defined max cache size maxcachesize cache big clean cache free map size max cache size maxcachesize delete entries memory frees delete expired entries deleteexpiredentries delete elements cache free d freed desired size desiredsize max cache size maxcachesize map size desired size desiredsize key invoke remove method remove last accessed list lastaccessedlist get last getlast object system err println error attempting cull cache cullcache remove last accessed list lastaccessedlist get last getlast object to string tostring cache object cacheobject cache last accessed list lastaccessedlist get last getlast remove wrapper objects cache primary purpose main tain maintain references linked lists main tain maintain creation time object ordering objects optimized speed str ictly strictly correct enc apsulation encapsulation cache object cacheobject underlying object wrapped cache object cacheobject object reference node cache order list reference avoid linear scans list time object accessed node removed current spot list moved front linked list node linkedlistnode last accessed list node lastaccessedlistnode reference node age order list reference avoid linear scans list reference object deleted list linked list node linkedlistnode age list node agelistnode count number times object read cache read count readcount creates cache object wrapper param object underlying object wrap cache object cacheobject object object object equals object cache object cacheobject cache object cacheobject cache object cacheobject cache object cacheobject object equals cache object cacheobject object hash code hashcode object hash code hashcode simple linked list linkedlist implementation main feature list nodes fast delete operations reference node deleted linked list linkedlist root list reference elements list linked list node linkedlistnode head linked list node linkedlistnode head creates linked list linked list linkedlist head head previous head returns linked list node list element list linked list node linkedlistnode get first getfirst linked list node linkedlistnode node head node head node returns linked list node list element list linked list node linkedlistnode get last getlast linked list node linkedlistnode node head previous node head node adds node list param node node add list node linked list node linkedlistnode add first addfirst linked list node linkedlistnode node node head node previous head node previous node node previous node node adds object list automatically creating node adding list param object object add list node created wrap object linked list node linkedlistnode add first addfirst object object linked list node linkedlistnode node linked list node linkedlistnode object head head node previous node node previous node node adds object list automatically creating node adding list param object object add list node created wrap object linked list node linkedlistnode add last addlast object object linked list node linkedlistnode node linked list node linkedlistnode object head head previous node previous node node previous node node erases elements list initial izes initializes clear remove references list linked list node linkedlistnode node get last getlast node node remove node get last getlast initialize head head previous head returns string representation linked list comma delimited list elements list string representation linked list linkedlist string to string tostring linked list node linkedlistnode node head string builder stringbuilder buf string builder stringbuilder node head buf append node to string tostring append node node buf to string tostring doubly linked node linked list linkedlist linked list linkedlist implementations equivalent references node list main tained maintained ext ernally externally exp osing exposing remove operations fast remove built requires reference reassignments remove existed main linked list linkedlist linear scan performed find correct node delete linked list implementation written jive cache system general purpose linked list applications suitable linked list java collections linked list node linkedlistnode linked list node linkedlistnode previous linked list node linkedlistnode object object custom ized customized jive cache system main tains maintains timestamp cache able cacheable object cache time stamps timestamps stored values represent number milliseconds passed january gmt creation timestamp cache maximum lifetime current time creation time max lifetime object deleted cache timestamp constructs linked list node param object object node represents param reference linked list node linkedlistnode list param previous reference previous linked list node linkedlistnode list linked list node linkedlistnode object object linked list node linkedlistnode linked list node linkedlistnode previous object object previous previous removes node linked list remove previous previous previous returns string representation linked list node calling to string tostring method node object string representation linked list node linkedlistnode string to string tostring object to string tostring