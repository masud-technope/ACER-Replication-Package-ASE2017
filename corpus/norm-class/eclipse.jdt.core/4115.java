copyright ibm corporation rights reserved program accompanying materials terms eclipse license accompanies distribution http eclipse org legal epl html contributors ibm corporation initial api implementation org eclipse jdt core tests model junit framework test org eclipse core resources i file ifile org eclipse core resources i folder ifolder org eclipse core resources i project iproject org eclipse core resources resources plugin resourcesplugin org eclipse core runtime core exception coreexception org eclipse jdt core org eclipse jdt core tests util util existence tests existencetests modifying resource tests modifyingresourcetests existence tests existencetests string test suite build model test suite buildmodeltestsuite existence tests existencetests assert corresponding resource fails assertcorrespondingresourcefails i java element ijavaelement element got exception gotexception element get corresponding resource getcorrespondingresource java model exception javamodelexception is does not exist isdoesnotexist got exception gotexception assert true asserttrue resource got exception gotexception assert open fails assertopenfails string expected message expectedmessage i openable iopenable openable string message openable open java model exception javamodelexception message get message getmessage expected message expectedmessage equals message system print util display string displaystring message system println assert equals assertequals expected message expectedmessage message assert underlying resource fails assertunderlyingresourcefails i java element ijavaelement element got exception gotexception element get underlying resource getunderlyingresource java model exception javamodelexception is does not exist isdoesnotexist got exception gotexception assert true asserttrue underlying resource got exception gotexception test binary method after non existing member testbinarymethodafternonexistingmember core exception coreexception i java project ijavaproject project create java project createjavaproject string string jcl lib i class file iclassfile class file classfile project get package fragment root getpackagefragmentroot getexternaljclpathstring get package fragment getpackagefragment java lang get class file getclassfile object class file classfile open i type itype type class file classfile get type gettype type get method getmethod foo string exists assert true asserttrue object to string tostring exist type get method getmethod to string tostring string exists delete project deleteproject test class file in binary testclassfileinbinary core exception coreexception create java project createjavaproject string src bin create file createfile bin i class file iclassfile class file classfile get class file getclassfile bin assert true asserttrue class file classfile exists delete project deleteproject test class file in library testclassfileinlibrary core exception coreexception create java project createjavaproject string string lib bin create file createfile lib i class file iclassfile class file classfile get class file getclassfile lib assert true asserttrue class file classfile exists delete project deleteproject test class file in library in other project testclassfileinlibraryinotherproject core exception coreexception create java project createjavaproject string bin create folder createfolder lib string path lib i file ifile file create file createfile path i java project ijavaproject create java project createjavaproject string string lib bin i class file iclassfile non existing file nonexistingfile get class file getclassfile path assert false assertfalse file path exist non existing file nonexistingfile exists i java element ijavaelement element java core javacore create get folder getfolder lib assert true asserttrue folder lib element exists i class file iclassfile existing file existingfile i class file iclassfile java core javacore create file assert true asserttrue file path exist existing file existingfile exists delete project deleteproject delete project deleteproject ensures slash doesn exist regression test bug i package fragment root ipackagefragmentroot get package fragment getpackagefragment accept invalid names test invalid package name testinvalidpackagename exception create java project createjavaproject create folder createfolder i package fragment root ipackagefragmentroot root get package fragment root getpackagefragmentroot i package fragment ipackagefragment pkg root get package fragment getpackagefragment assert false assertfalse exist pkg exists delete project deleteproject ensures slash opened regression test bug i package fragment root ipackagefragmentroot get package fragment getpackagefragment accept invalid names test invalid package name testinvalidpackagename exception create java project createjavaproject create folder createfolder i package fragment root ipackagefragmentroot root get package fragment root getpackagefragmentroot i package fragment ipackagefragment pkg root get package fragment getpackagefragment assert open fails assertopenfails project root exist pkg delete project deleteproject test jar file testjarfile exception i java project ijavaproject create java project createjavaproject string paths and contents pathsandcontents string test java test add library addlibrary lib jar libs rc libsrc zip paths and contents pathsandcontents java core javacore version i java project ijavaproject create java project createjavaproject string string lib jar bin i package fragment root ipackagefragmentroot root get package fragment root getpackagefragmentroot lib jar assert true asserttrue root exists assert equals assertequals get package fragment roots getpackagefragmentroots root delete project deleteproject delete project deleteproject ensure i class file iclassfile handle created file source folder doesn exist regression test bug exists returns source file class folder classfolder test class file in source testclassfileinsource core exception coreexception create java project createjavaproject string src bin create file createfile src i class file iclassfile class file classfile get class file getclassfile src assert true asserttrue file exist class file classfile exists delete project deleteproject ensure i class file iclassfile handle created file source folder opened regression test bug exists returns source file class folder classfolder test class file in source testclassfileinsource core exception coreexception create java project createjavaproject string src bin create file createfile src i class file iclassfile class file classfile get class file getclassfile src assert open fails assertopenfails operation supported element type src class file classfile delete project deleteproject ensure i compilation unit icompilationunit handle created java file library folder doesn exist regression test bug exists returns source file class folder classfolder test compilation unit in library testcompilationunitinlibrary core exception coreexception create java project createjavaproject string string lib bin create file createfile lib java i compilation unit icompilationunit get compilation unit getcompilationunit lib java assert true asserttrue ccompilation unit exist exists delete project deleteproject ensure i compilation unit icompilationunit handle created java file library folder opened regression test bug exists returns source file class folder classfolder test compilation unit in library testcompilationunitinlibrary core exception coreexception create java project createjavaproject string string lib bin create file createfile lib java i compilation unit icompilationunit get compilation unit getcompilationunit lib java assert open fails assertopenfails operation supported element type lib delete project deleteproject ensure method invalid parameters returns exists regression test bug get return type getreturntype null argument exception nullargumentexception test method with invalid parameter testmethodwithinvalidparameter core exception coreexception create java project createjavaproject create file createfile java i method imethod method get compilation unit getcompilationunit java get type gettype get method getmethod foo string assert true asserttrue method r methodr exist method exists delete project deleteproject ensure existing file opened test non existing class file testnonexistingclassfile core exception coreexception create java project createjavaproject string src string lib bin i class file iclassfile class file classfile get class file getclassfile lib assert open fails assertopenfails lib exist class file classfile delete project deleteproject ensure existing file opened regression test java element javaelement get element info getelementinfo longer works test non existing class file testnonexistingclassfile core exception coreexception create java project createjavaproject string src string bin i class file iclassfile class file classfile get class file getclassfile lib assert open fails assertopenfails lib project build path class file classfile delete project deleteproject ensure existing compilation unit opened test non existing compilation unit testnonexistingcompilationunit core exception coreexception create java project createjavaproject string src bin i compilation unit icompilationunit get compilation unit getcompilationunit src java assert open fails assertopenfails java src exist delete project deleteproject ensure existing external library root doesn exists regression test https bugs eclipse org bugs bug cgi test non existing external package fragment root testnonexistingexternalpackagefragmentroot core exception coreexception create project createproject create folder createfolder lib i java project ijavaproject create java project createjavaproject string string lib external library i package fragment root ipackagefragmentroot root get package fragment root getpackagefragmentroot lib lib internal library doesn exist assert false assertfalse root exist root exists delete project deleteproject delete project deleteproject ensure existing external library root doesn exists regression test https bugs eclipse org bugs bug cgi test non existing external package fragment root testnonexistingexternalpackagefragmentroot core exception coreexception i java project ijavaproject create java project createjavaproject string string get external resource path getexternalresourcepath non existing nonexisting i package fragment root ipackagefragmentroot root get package fragment root getpackagefragmentroot get external resource path getexternalresourcepath non existing nonexisting assert false assertfalse root exist root exists delete project deleteproject ensure existing fragment opened test non existing package fragment testnonexistingpackagefragment core exception coreexception create java project createjavaproject string src bin i package fragment ipackagefragment pkg get package getpackage src assert open fails assertopenfails src exist pkg delete project deleteproject ensure existing fragment opened test non existing package fragment testnonexistingpackagefragment core exception coreexception i java project ijavaproject project create java project createjavaproject string bin i folder ifolder folder create folder createfolder src i package fragment ipackagefragment pkg project get package fragment root getpackagefragmentroot folder get package fragment getpackagefragment assert open fails assertopenfails src project build path pkg delete project deleteproject ensure excluded fragment doesn exist regression test bug content disapear explorer test non existing package fragment testnonexistingpackagefragment core exception coreexception create java project createjavaproject create folder createfolder pack i package fragment ipackagefragment pkg get package getpackage pack edit file editfile classpath xml version encoding utf classpath class path entry classpathentry excluding pack kind src path class path entry classpathentry kind output path classpath assert false assertfalse pack exist pkg exists delete project deleteproject ensure java project doesn exist regression test bug java project javaproject exists returns project doesn java nature test non java project testnonjavaproject core exception coreexception create project createproject i project iproject project get project getproject i java project ijavaproject java project javaproject java core javacore create project assert true asserttrue simple project exist java project javaproject exists delete project deleteproject ensures fragment root classpath opened test pkg fragment root not in classpath testpkgfragmentrootnotinclasspath core exception coreexception i java project ijavaproject project create java project createjavaproject string src bin i folder ifolder folder create folder createfolder other root otherroot i package fragment root ipackagefragmentroot root project get package fragment root getpackagefragmentroot folder assert true asserttrue root exist root exists assert open fails assertopenfails other root otherroot project build path root delete project deleteproject ensure i type parameter itypeparameter exists exists source test type parameter testtypeparameter core exception coreexception create java project createjavaproject create file createfile java i type parameter itypeparameter type parameter typeparameter get compilation unit getcompilationunit java get type gettype get type parameter gettypeparameter assert true asserttrue type parameter exist type parameter typeparameter exists delete project deleteproject ensure i type parameter itypeparameter exists exists source test type parameter testtypeparameter core exception coreexception create java project createjavaproject create file createfile java string foo i type parameter itypeparameter type parameter typeparameter get compilation unit getcompilationunit java get type gettype get method getmethod foo string get type parameter gettypeparameter assert true asserttrue type parameter exist type parameter typeparameter exists delete project deleteproject ensure i type parameter itypeparameter doesn exist doesn exist source test type parameter testtypeparameter core exception coreexception create java project createjavaproject create file createfile java i type parameter itypeparameter type parameter typeparameter get compilation unit getcompilationunit java get type gettype get type parameter gettypeparameter assert true asserttrue type parameter exist type parameter typeparameter exists delete project deleteproject ensure i type parameter itypeparameter doesn exist doesn exist source test type parameter testtypeparameter core exception coreexception create java project createjavaproject create file createfile java string foo i type parameter itypeparameter type parameter typeparameter get compilation unit getcompilationunit java get type gettype get method getmethod foo string get type parameter gettypeparameter string assert true asserttrue type parameter exist type parameter typeparameter exists delete project deleteproject ensure i type parameter itypeparameter doesn exist member exists source regression test bug reconciling class cast exception classcastexception source type element info sourcetypeelementinfo get type parameter bounds gettypeparameterbounds test type parameter testtypeparameter core exception coreexception create java project createjavaproject create file createfile java i type parameter itypeparameter type parameter typeparameter get compilation unit getcompilationunit java get type gettype get type parameter gettypeparameter assert true asserttrue type parameter exist type parameter typeparameter exists delete project deleteproject ensures resource existing file test corresponding resource non existing class file testcorrespondingresourcenonexistingclassfile core exception coreexception create java project createjavaproject string src string lib bin i class file iclassfile class file classfile get class file getclassfile lib assert corresponding resource fails assertcorrespondingresourcefails class file classfile delete project deleteproject ensures resource existing compilation unit test corresponding resource non existing compilation unit testcorrespondingresourcenonexistingcompilationunit core exception coreexception create java project createjavaproject string src bin i compilation unit icompilationunit compilation unit compilationunit get compilation unit getcompilationunit src java assert corresponding resource fails assertcorrespondingresourcefails compilation unit compilationunit delete project deleteproject ensures resource existing jar fragment root test corresponding resource non existing jar pkg fragment root testcorrespondingresourcenonexistingjarpkgfragmentroot core exception coreexception i java project ijavaproject project create java project createjavaproject string src bin i package fragment root ipackagefragmentroot root project get package fragment root getpackagefragmentroot non existing nonexisting jar assert corresponding resource fails assertcorrespondingresourcefails root delete project deleteproject ensures resource existing fragment test corresponding resource non existing pkg fragment testcorrespondingresourcenonexistingpkgfragment core exception coreexception create java project createjavaproject string src bin i package fragment ipackagefragment pkg get package getpackage src non existing nonexisting assert corresponding resource fails assertcorrespondingresourcefails pkg delete project deleteproject ensures resource existing fragment root test corresponding resource non existing pkg fragment root testcorrespondingresourcenonexistingpkgfragmentroot core exception coreexception i java project ijavaproject project create java project createjavaproject string src bin i folder ifolder folder create folder createfolder non existing root nonexistingroot i package fragment root ipackagefragmentroot root project get package fragment root getpackagefragmentroot folder assert corresponding resource fails assertcorrespondingresourcefails root delete project deleteproject ensures resource existing java project test corresponding resource non existing project testcorrespondingresourcenonexistingproject i project iproject non existing project nonexistingproject resources plugin resourcesplugin get workspace getworkspace get root getroot get project getproject non existing nonexisting i java project ijavaproject java project javaproject java core javacore create non existing project nonexistingproject assert corresponding resource fails assertcorrespondingresourcefails java project javaproject ensures resource existing type test corresponding resource non existing type testcorrespondingresourcenonexistingtype core exception coreexception create java project createjavaproject string src bin create file createfile src java i type itype type get compilation unit getcompilationunit src java get type gettype non existing nonexisting assert corresponding resource fails assertcorrespondingresourcefails type delete project deleteproject ensures underlying resource existing file test underlying resource non existing class file testunderlyingresourcenonexistingclassfile core exception coreexception create java project createjavaproject string src string lib bin i class file iclassfile class file classfile get class file getclassfile lib assert underlying resource fails assertunderlyingresourcefails class file classfile delete project deleteproject ensures underlying resource existing compilation unit test underlying resource non existing compilation unit testunderlyingresourcenonexistingcompilationunit core exception coreexception create java project createjavaproject string src bin i compilation unit icompilationunit compilation unit compilationunit get compilation unit getcompilationunit src java assert underlying resource fails assertunderlyingresourcefails compilation unit compilationunit delete project deleteproject ensures underlying resource existing jar fragment root test underlying resource non existing jar pkg fragment root testunderlyingresourcenonexistingjarpkgfragmentroot core exception coreexception i java project ijavaproject project create java project createjavaproject string src bin i package fragment root ipackagefragmentroot root project get package fragment root getpackagefragmentroot non existing nonexisting jar assert underlying resource fails assertunderlyingresourcefails root delete project deleteproject ensures underlying resource existing fragment test underlying resource non existing pkg fragment testunderlyingresourcenonexistingpkgfragment core exception coreexception create java project createjavaproject string src bin i package fragment ipackagefragment pkg get package getpackage src non existing nonexisting assert underlying resource fails assertunderlyingresourcefails pkg delete project deleteproject ensures underlying resource existing fragment root test underlying resource non existing pkg fragment root testunderlyingresourcenonexistingpkgfragmentroot core exception coreexception i java project ijavaproject project create java project createjavaproject string src bin i folder ifolder folder create folder createfolder non existing root nonexistingroot i package fragment root ipackagefragmentroot root project get package fragment root getpackagefragmentroot folder assert underlying resource fails assertunderlyingresourcefails root delete project deleteproject ensures underlying resource existing java project test underlying resource non existing project testunderlyingresourcenonexistingproject i project iproject non existing project nonexistingproject resources plugin resourcesplugin get workspace getworkspace get root getroot get project getproject non existing nonexisting i java project ijavaproject java project javaproject java core javacore create non existing project nonexistingproject assert underlying resource fails assertunderlyingresourcefails java project javaproject ensures underlying resource existing type test underlying resource non existing type testunderlyingresourcenonexistingtype core exception coreexception create java project createjavaproject string src bin create file createfile src java i type itype type get compilation unit getcompilationunit src java get type gettype non existing nonexisting assert underlying resource fails assertunderlyingresourcefails type delete project deleteproject