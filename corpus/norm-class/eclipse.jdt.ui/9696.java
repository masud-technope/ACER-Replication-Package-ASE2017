copyright ibm corporation rights reserved program accompanying materials terms eclipse license accompanies distribution http eclipse org legal epl html contributors ibm corporation initial api implementation org eclipse jdt internal corext refactoring structure java util hash set hashset java util org eclipse ltk core refactoring refactoring status refactoringstatus org eclipse jdt core dom ast org eclipse jdt core dom ast node astnode org eclipse jdt core dom ast visitor astvisitor org eclipse jdt core dom expression org eclipse jdt core dom field access fieldaccess org eclipse jdt core dom i binding ibinding org eclipse jdt core dom i package binding ipackagebinding org eclipse jdt core dom i type binding itypebinding org eclipse jdt core dom member ref memberref org eclipse jdt core dom method invocation methodinvocation org eclipse jdt core dom method ref methodref org eclipse jdt core dom org eclipse jdt core dom qualified name qualifiedname org eclipse jdt core dom simple name simplename org eclipse jdt core dom type org eclipse jdt core dom rewrite import rewrite importrewrite import rewrite context importrewritecontext org eclipse jdt internal corext code manipulation codemanipulation context sensitive import rewrite context contextsensitiveimportrewritecontext org eclipse jdt internal corext dom ast flattener astflattener org eclipse jdt internal corext dom ast node factory astnodefactory org eclipse jdt internal corext dom ast nodes astnodes org eclipse jdt internal corext dom bindings org eclipse jdt internal corext refactoring refactoring core messages refactoringcoremessages org eclipse jdt internal corext refactoring base java status context javastatuscontext move static member analyzer movestaticmemberanalyzer ast visitor astvisitor refactoring status refactoringstatus f status fstatus i type binding itypebinding f source fsource i type binding itypebinding f target ftarget compilation unit rewrite compilationunitrewrite f cu rewrite fcurewrite i binding ibinding f members fmembers f needs import fneedsimport simple name simplename f processed fprocessed string reference update refactoring core messages refactoringcoremessages move members refactoring movemembersrefactoring reference update referenceupdate move static member analyzer movestaticmemberanalyzer compilation unit rewrite compilationunitrewrite cu rewrite curewrite i binding ibinding members i type binding itypebinding source i type binding itypebinding target f status fstatus refactoring status refactoringstatus f cu rewrite fcurewrite cu rewrite curewrite f members fmembers members f source fsource source f target ftarget target f processed fprocessed hash set hashset refactoring status refactoringstatus get status getstatus f status fstatus is processed isprocessed ast node astnode node f processed fprocessed node rewrite simple name simplename node i type binding itypebinding type ast ast node getast import rewrite context importrewritecontext context context sensitive import rewrite context contextsensitiveimportrewritecontext node f cu rewrite fcurewrite get import rewrite getimportrewrite type result f cu rewrite fcurewrite get import rewrite getimportrewrite add import addimport type f cu rewrite fcurewrite getast context f cu rewrite fcurewrite get import remove r getimportremover register added import registeraddedimport type get qualified name getqualifiedname dummy ast node factory astnodefactory new name newname f cu rewrite fcurewrite getast ast flattener astflattener as string asstring result qualified name qualifiedname ast new qualified name newqualifiedname dummy ast new simple name newsimplename node get identifier getidentifier f cu rewrite fcurewrite getastrewrite replace node f cu rewrite fcurewrite create group description creategroupdescription reference update f cu rewrite fcurewrite get import remove r getimportremover register removed node registerremovednode node f processed fprocessed add node f needs import fneedsimport rewrite qualified name qualifiedname node i type binding itypebinding type rewrite name rewritename node get qualifier getqualifier type f processed fprocessed add node get name getname rewrite field access fieldaccess node i type binding itypebinding type expression exp node get expression getexpression exp import rewrite context importrewritecontext context context sensitive import rewrite context contextsensitiveimportrewritecontext node f cu rewrite fcurewrite get import rewrite getimportrewrite type result f cu rewrite fcurewrite get import rewrite getimportrewrite add import addimport type f cu rewrite fcurewrite getast context f cu rewrite fcurewrite get import remove r getimportremover register added import registeraddedimport type get qualified name getqualifiedname exp ast node factory astnodefactory new name newname f cu rewrite fcurewrite getast ast flattener astflattener as string asstring result f cu rewrite fcurewrite getastrewrite node field access fieldaccess expression property exp f cu rewrite fcurewrite create group description creategroupdescription reference update f needs import fneedsimport exp rewrite name rewritename exp type rewrite expression rewriteexpression node exp type f processed fprocessed add node get name getname rewrite method invocation methodinvocation node i type binding itypebinding type expression exp node get expression getexpression exp import rewrite context importrewritecontext context context sensitive import rewrite context contextsensitiveimportrewritecontext node f cu rewrite fcurewrite get import rewrite getimportrewrite type result f cu rewrite fcurewrite get import rewrite getimportrewrite add import addimport type f cu rewrite fcurewrite getast context f cu rewrite fcurewrite get import remove r getimportremover register added import registeraddedimport type get qualified name getqualifiedname exp ast node factory astnodefactory new name newname f cu rewrite fcurewrite getast ast flattener astflattener as string asstring result f cu rewrite fcurewrite getastrewrite node method invocation methodinvocation expression property exp f cu rewrite fcurewrite create group description creategroupdescription reference update f needs import fneedsimport exp rewrite name rewritename exp type rewrite expression rewriteexpression node exp type f processed fprocessed add node get name getname rewrite member ref memberref node i type binding itypebinding type qualifier node get qualifier getqualifier qualifier import rewrite context importrewritecontext context context sensitive import rewrite context contextsensitiveimportrewritecontext node f cu rewrite fcurewrite get import rewrite getimportrewrite type result f cu rewrite fcurewrite get import rewrite getimportrewrite add import addimport type f cu rewrite fcurewrite getast context f cu rewrite fcurewrite get import remove r getimportremover register added import registeraddedimport type get qualified name getqualifiedname qualifier ast node factory astnodefactory new name newname f cu rewrite fcurewrite getast ast flattener astflattener as string asstring result f cu rewrite fcurewrite getastrewrite node member ref memberref qualifier property qualifier f cu rewrite fcurewrite create group description creategroupdescription reference update f needs import fneedsimport rewrite name rewritename qualifier type f processed fprocessed add node get name getname rewrite method ref methodref node i type binding itypebinding type qualifier node get qualifier getqualifier qualifier import rewrite context importrewritecontext context context sensitive import rewrite context contextsensitiveimportrewritecontext node f cu rewrite fcurewrite get import rewrite getimportrewrite type result f cu rewrite fcurewrite get import rewrite getimportrewrite add import addimport type f cu rewrite fcurewrite getast context f cu rewrite fcurewrite get import remove r getimportremover register added import registeraddedimport type get qualified name getqualifiedname qualifier ast node factory astnodefactory new name newname f cu rewrite fcurewrite getast ast flattener astflattener as string asstring result f cu rewrite fcurewrite getastrewrite node method ref methodref qualifier property qualifier f cu rewrite fcurewrite create group description creategroupdescription reference update f needs import fneedsimport rewrite name rewritename qualifier type f processed fprocessed add node get name getname rewrite name rewritename i type binding itypebinding type ast creator getast fully qualified fullyqualified qualified name qualifiedname simple name simplename left ast nodes astnodes get left most simple name getleftmostsimplename left resolve binding resolvebinding i package binding ipackagebinding fully qualified fullyqualified fully qualified fullyqualified f cu rewrite fcurewrite getastrewrite replace ast node factory astnodefactory new name newname creator type get qualified name getqualifiedname f cu rewrite fcurewrite create group description creategroupdescription reference update f cu rewrite fcurewrite get import remove r getimportremover register removed node registerremovednode import rewrite context importrewritecontext context context sensitive import rewrite context contextsensitiveimportrewritecontext f cu rewrite fcurewrite get import rewrite getimportrewrite type result f cu rewrite fcurewrite get import rewrite getimportrewrite add import addimport type f cu rewrite fcurewrite getast context f cu rewrite fcurewrite get import remove r getimportremover register added import registeraddedimport type get qualified name getqualifiedname ast node factory astnodefactory new name newname f cu rewrite fcurewrite getast ast flattener astflattener as string asstring result f cu rewrite fcurewrite getastrewrite replace f cu rewrite fcurewrite create group description creategroupdescription reference update f cu rewrite fcurewrite get import remove r getimportremover register removed node registerremovednode f needs import fneedsimport rewrite expression rewriteexpression ast node astnode node expression exp i type binding itypebinding type import rewrite context importrewritecontext context context sensitive import rewrite context contextsensitiveimportrewritecontext exp f cu rewrite fcurewrite get import rewrite getimportrewrite type type node typenode f cu rewrite fcurewrite get import rewrite getimportrewrite add import addimport type f cu rewrite fcurewrite getast context f cu rewrite fcurewrite getastrewrite replace exp type node typenode f cu rewrite fcurewrite create group description creategroupdescription reference update f cu rewrite fcurewrite get import remove r getimportremover register added import registeraddedimport type get qualified name getqualifiedname f cu rewrite fcurewrite get import remove r getimportremover register removed node registerremovednode exp f needs import fneedsimport non static access nonstaticaccess node non static access nonstaticaccess ast node astnode node f status fstatus add warning addwarning refactoring core messages refactoringcoremessages move static member analyzer movestaticmemberanalyzer non static nonstatic java status context javastatuscontext create f cu rewrite fcurewrite get cu getcu node is static access isstaticaccess expression exp i type binding itypebinding type exp bindings equals type exp resolve binding resolvebinding is moved member ismovedmember i binding ibinding binding binding f members fmembers length bindings equal declarations equaldeclarations f members fmembers binding