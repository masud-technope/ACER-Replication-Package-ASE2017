copyright ibm corporation rights reserved program accompanying materials terms eclipse license accompanies distribution http eclipse org legal epl html contributors ibm corporation initial api implementation org eclipse ltk core refactoring java util array list arraylist java util arrays java util collections java util iterator java util list org eclipse core runtime org eclipse core runtime core exception coreexception org eclipse core runtime i progress monitor iprogressmonitor org eclipse core runtime i safe runnable isaferunnable org eclipse core runtime operation canceled exception operationcanceledexception org eclipse core runtime safe runner saferunner org eclipse core runtime sub progress monitor subprogressmonitor org eclipse ltk internal core refactoring refactoring core messages refactoringcoremessages org eclipse ltk internal core refactoring refactoring core plugin refactoringcoreplugin represents composite change composite marked synthetic synthetic composite rendered refactoring preview tree save display real estate clients subclass change composite change compositechange change string f name fname list change f changes fchanges f is synthetic fissynthetic change f undo until exception fundountilexception creates composite change param human readable change display change user composite change compositechange string array list arraylist change creates composite change array children param human readable change display change user param children initial array children composite change compositechange string change children array list arraylist change children length add all addall children composite change compositechange string list change is not null isnotnull is not null isnotnull f name fname f changes fchanges returns change synthetic code code change synthetic code code is synthetic issynthetic f is synthetic fissynthetic marks change synthetic mark as synthetic markassynthetic f is synthetic fissynthetic override string get name getname f name fname adds change list children change code code adding change param change change add add change change change is true istrue change get parent getparent f changes fchanges add change change set parent setparent adds array list children param add add all addall change length add merges children composite change change removed composite change change param change change merge merge composite change compositechange change change change get children getchildren length change change remove add removes change list children param change change remove code code change contained child code code returned remove change change is not null isnotnull change result f changes fchanges remove change result change set parent setparent result removes composite change list removed composite change change clear change result f changes fchanges to array toarray change f changes fchanges size f changes fchanges clear result returns children managed composite change children change empty array children exist change get children getchildren f changes fchanges to array toarray change f changes fchanges size inherit doc inheritdoc composite change sends code set enabled setenabled code children client allowed extend method override set enabled setenabled enabled set enabled setenabled enabled iterator change iter f changes fchanges iterator iter has next hasnext iter set enabled setenabled enabled inherit doc inheritdoc composite change sends code initialize validation data initializevalidationdata code children client allowed extend method override initialize validation data initializevalidationdata i progress monitor iprogressmonitor nls begin task begintask f changes fchanges size iterator change iter f changes fchanges iterator iter has next hasnext change change iter change initialize validation data initializevalidationdata sub progress monitor subprogressmonitor worked inherit doc inheritdoc composite change sends code is valid isvalid code children returns status severity code fatal code children exception remaining children receive code is valid isvalid code call client allowed extend method override refactoring status refactoringstatus is valid isvalid i progress monitor iprogressmonitor core exception coreexception refactoring status refactoringstatus result refactoring status refactoringstatus nls begin task begintask f changes fchanges size iterator change iter f changes fchanges iterator iter has next hasnext result has fatal error hasfatalerror change change iter change is enabled isenabled result merge change is valid isvalid sub progress monitor subprogressmonitor worked is canceled iscanceled operation canceled exception operationcanceledexception result inherit doc inheritdoc composite change sends code perform code enabled children children exception remaining children receive code perform code call method code get undo until exception getundountilexception code undo object undo objects executed children client allowed extend method override change perform i progress monitor iprogressmonitor core exception coreexception f undo until exception fundountilexception list change undos array list arraylist f changes fchanges size nls begin task begintask f changes fchanges size set task name settaskname refactoring core messages refactoringcoremessages composite change compositechange performing changes task performingchangestask change change canceled iterator change iter f changes fchanges iterator iter has next hasnext change iter canceled internal process on cancel internalprocessoncancel change change is enabled isenabled change undo change undochange undo change undochange change perform sub progress monitor subprogressmonitor operation canceled exception operationcanceledexception canceled internal continue on cancel internalcontinueoncancel undos undos undo change undochange undos undos add undo change undochange remove change list children garbage collector change collect change ensures memory consumption doesn pro ducing producing undo change tree iter remove dispose change longer list children call composite change compositechange dispose change change to dispose changetodispose change safe runner saferunner i safe runnable isaferunnable override exception change to dispose changetodispose dispose override handle exception handleexception throwable exception refactoring core plugin refactoringcoreplugin log exception canceled operation canceled exception operationcanceledexception undos collections reverse undos create undo change createundochange undos to array toarray change undos size core exception coreexception handle undos handleundos change undos internal handle exception internalhandleexception change runtime exception runtimeexception handle undos handleundos change undos internal handle exception internalhandleexception change handle undos handleundos change failed change failedchange list change undos undos f undo until exception fundountilexception failed change failedchange composite change compositechange change part undo change partundochange composite change compositechange failed change failedchange get undo until exception getundountilexception part undo change partundochange undos add part undo change partundochange undos size f undo until exception fundountilexception collections reverse undos f undo until exception fundountilexception create undo change createundochange undos to array toarray change undos size note internal method overridden refactoring framework method called managed composite change generates exception performed param change change caused exception param exception noreference method intended referenced clients internal handle exception internalhandleexception change change throwable note internal method overridden refactoring framework method called managed composite change generates operation canceled exception performed code code performing change cancel code code noreference method intended referenced clients internal continue on cancel internalcontinueoncancel note internal method overridden refactoring framework method called execution change canceled code internal continue on cancel internalcontinueoncancel code returned param change change perform code code change performed execution canceled code code noreference method intended referenced clients internal process on cancel internalprocessoncancel change change inherit doc inheritdoc composite change sends code dispose code children guaranteed children receive code dispose code call override dispose iterator change iter f changes fchanges iterator iter has next hasnext change change iter safe runner saferunner i safe runnable isaferunnable override exception change dispose override handle exception handleexception throwable exception refactoring core plugin refactoringcoreplugin log exception returns undo object undo children executed performing change returns code code executed undo method intended overridden extended undo object undo children executed performing change code code executed undo change get undo until exception getundountilexception f undo until exception fundountilexception hook create undo change method overridden clients provide composite change create undo change param child undos childundos child undo undo edits list reverse order execution change array undo change change executed undo change change create undo change createundochange change child undos childundos composite change compositechange get name getname child undos childundos override object get affected objects getaffectedobjects f changes fchanges size object list object result array list arraylist iterator change iter f changes fchanges iterator iter has next hasnext change change iter object affected objects affectedobjects change get affected objects getaffectedobjects affected objects affectedobjects result add all addall arrays as list aslist affected objects affectedobjects result to array toarray override object get modified element getmodifiedelement inherit doc inheritdoc override change descriptor changedescriptor get descriptor getdescriptor iterator change iterator f changes fchanges iterator iterator has next hasnext change change iterator change descriptor changedescriptor descriptor change get descriptor getdescriptor descriptor descriptor override string to string tostring string buffer stringbuffer buf f buff string buffer stringbuffer buf f buff append get name getname nls buf f buff append iterator change iter f changes fchanges iterator iter has next hasnext nls nls buf f buff append append iter to string tostring append buf f buff to string tostring