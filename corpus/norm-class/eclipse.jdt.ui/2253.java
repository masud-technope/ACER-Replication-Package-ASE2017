copyright ibm corporation rights reserved program accompanying materials terms eclipse license accompanies distribution http eclipse org legal epl html contributors ibm corporation initial api implementation org eclipse ltk core refactoring org eclipse core runtime org eclipse core runtime core exception coreexception org eclipse core runtime i progress monitor iprogressmonitor org eclipse core runtime null progress monitor nullprogressmonitor org eclipse core runtime sub progress monitor subprogressmonitor org eclipse core resources i workspace runnable iworkspacerunnable org eclipse ltk internal core refactoring not can celable progress monitor notcancelableprogressmonitor org eclipse ltk internal core refactoring refactoring core messages refactoringcoremessages org eclipse ltk internal core refactoring history unknown refactoring descriptor unknownrefactoringdescriptor operation performed creates link change object refactoring created refactoring object precondition checking performed created link check conditions operation checkconditionsoperation requested precondition checking performed creating change precondition checking returns fatal error status severity exc eeds exceeds threshold change created change created operation calls link change initialize validation data initializevalidationdata i progress monitor iprogressmonitor initialize change validation data operation executed method off ered offered code i workspace iworkspace code achieve proper delta batching note intended extended clients noextend intended subclassed clients create change operation createchangeoperation i workspace runnable iworkspacerunnable refactoring f refactoring frefactoring check conditions operation checkconditionsoperation f check condition operation fcheckconditionoperation f condition checking failed severity fconditioncheckingfailedseverity change f change fchange creates operation refactoring condition checking performed creating change object assumed condition checking performed operation operation fail precondition checking performed param refactoring refactoring change created create change operation createchangeoperation refactoring refactoring is not null isnotnull refactoring f refactoring frefactoring refactoring creates operation link check conditions operation checkconditionsoperation performed operation checks conditions code check conditions operation checkconditionsoperation code depending result condition checking change object created param operation condition checking operation param check failed severity checkfailedseverity severity condition checking int erpreted interpreted failed passed greater link refactoring status refactoringstatus equal link refactoring status refactoringstatus fatal standard condition check int erpreted interpreted failed accessed link refactoring core refactoringcore get condition checking failed severity getconditioncheckingfailedseverity create change operation createchangeoperation check conditions operation checkconditionsoperation operation check failed severity checkfailedseverity is not null isnotnull operation f check condition operation fcheckconditionoperation operation f refactoring frefactoring operation get refactoring getrefactoring is true istrue check failed severity checkfailedseverity refactoring status refactoringstatus check failed severity checkfailedseverity refactoring status refactoringstatus fatal f condition checking failed severity fconditioncheckingfailedseverity check failed severity checkfailedseverity returns condition checking failed severity operation condition checking failed severity refactoring status refactoringstatus get condition checking failed severity getconditioncheckingfailedseverity f condition checking failed severity fconditioncheckingfailedseverity override i progress monitor iprogressmonitor core exception coreexception null progress monitor nullprogressmonitor f change fchange f change fchange refactoring tick provider refactoringtickprovider rtp f refactoring frefactoring get refactoring tick provider getrefactoringtickprovider f check condition operation fcheckconditionoperation condition ticks conditionticks f check condition operation fcheckconditionoperation get ticks getticks rtp all ticks allticks condition ticks conditionticks rtp get create change ticks getcreatechangeticks rtp get initialize change ticks getinitializechangeticks nls begin task begintask nls nls all ticks allticks nls sub task subtask nls f check condition operation fcheckconditionoperation sub progress monitor subprogressmonitor condition ticks conditionticks refactoring status refactoringstatus status f check condition operation fcheckconditionoperation get status getstatus status status get severity getseverity f condition checking failed severity fconditioncheckingfailedseverity f change fchange f refactoring frefactoring create change createchange sub progress monitor subprogressmonitor rtp get create change ticks getcreatechangeticks f change fchange initialize validation data initializevalidationdata not can celable progress monitor notcancelableprogressmonitor sub progress monitor subprogressmonitor rtp get initialize change ticks getinitializechangeticks worked rtp get create change ticks getcreatechangeticks rtp get initialize change ticks getinitializechangeticks nls begin task begintask nls nls rtp get create change ticks getcreatechangeticks rtp get initialize change ticks getinitializechangeticks f change fchange f refactoring frefactoring create change createchange sub progress monitor subprogressmonitor rtp get create change ticks getcreatechangeticks f change fchange initialize validation data initializevalidationdata not can celable progress monitor notcancelableprogressmonitor sub progress monitor subprogressmonitor rtp get initialize change ticks getinitializechangeticks returns out come outcome operation code code exception occurred performing operation operation has n hasn performed created change code code change get change getchange f change fchange change descriptor changedescriptor descriptor f change fchange get descriptor getdescriptor descriptor composite change compositechange composite composite change compositechange f change fchange get name getname override change descriptor changedescriptor get descriptor getdescriptor string f change fchange get name getname length refactoring core messages refactoringcoremessages create change operation createchangeoperation unknown refactoring unknown refactoring descriptor unknownrefactoringdescriptor unknown descriptor unknowndescriptor unknown refactoring descriptor unknownrefactoringdescriptor refactoring change descriptor refactoringchangedescriptor unknown descriptor unknowndescriptor composite mark as synthetic markassynthetic composite add f change fchange f change fchange composite f change fchange returns status condition checking returns code code condition checking requested status condition checking refactoring status refactoringstatus get condition checking status getconditioncheckingstatus f check condition operation fcheckconditionoperation f check condition operation fcheckconditionoperation get status getstatus returns condition checking style link check conditions operation checkconditionsoperation condition checking operation change created calling link refactoring create change createchange i progress monitor iprogressmonitor link check conditions operation checkconditionsoperation returned condition checking style get condition checking style getconditioncheckingstyle f check condition operation fcheckconditionoperation f check condition operation fcheckconditionoperation get style getstyle check conditions operation checkconditionsoperation