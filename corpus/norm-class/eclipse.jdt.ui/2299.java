copyright ibm corporation rights reserved program accompanying materials terms eclipse license accompanies distribution http eclipse org legal epl html contributors ibm corporation initial api implementation org eclipse jdt internal corext code manipulation codemanipulation java util array list arraylist java util iterator java util list org eclipse core runtime org eclipse core runtime core exception coreexception org eclipse core runtime i progress monitor iprogressmonitor org eclipse core runtime null progress monitor nullprogressmonitor org eclipse core runtime operation canceled exception operationcanceledexception org eclipse core runtime jobs i scheduling rule ischedulingrule org eclipse core resources i workspace runnable iworkspacerunnable org eclipse core resources resources plugin resourcesplugin org eclipse text edits text edit textedit org eclipse jdt core i compilation unit icompilationunit org eclipse jdt core i java element ijavaelement org eclipse jdt core i java project ijavaproject org eclipse jdt core dom ast org eclipse jdt core dom ast node astnode org eclipse jdt core dom abstract type declaration abstracttypedeclaration org eclipse jdt core dom array access arrayaccess org eclipse jdt core dom assignment org eclipse jdt core dom block org eclipse jdt core dom body declaration bodydeclaration org eclipse jdt core dom cast expression castexpression org eclipse jdt core dom compilation unit compilationunit org eclipse jdt core dom conditional expression conditionalexpression org eclipse jdt core dom expression org eclipse jdt core dom field access fieldaccess org eclipse jdt core dom for statement forstatement org eclipse jdt core dom i method binding imethodbinding org eclipse jdt core dom i type binding itypebinding org eclipse jdt core dom i variable binding ivariablebinding org eclipse jdt core dom if statement ifstatement org eclipse jdt core dom infix expression infixexpression org eclipse jdt core dom infix expression infixexpression org eclipse jdt core dom instanceof expression instanceofexpression org eclipse jdt core dom javadoc org eclipse jdt core dom method declaration methoddeclaration org eclipse jdt core dom method invocation methodinvocation org eclipse jdt core dom modifier org eclipse jdt core dom modifier modifier keyword modifierkeyword org eclipse jdt core dom org eclipse jdt core dom parenthesized expression parenthesizedexpression org eclipse jdt core dom postfix expression postfixexpression org eclipse jdt core dom prefix expression prefixexpression org eclipse jdt core dom primitive type primitivetype org eclipse jdt core dom return statement returnstatement org eclipse jdt core dom single variable declaration singlevariabledeclaration org eclipse jdt core dom statement org eclipse jdt core dom super method invocation supermethodinvocation org eclipse jdt core dom tag element tagelement org eclipse jdt core dom text element textelement org eclipse jdt core dom this expression thisexpression org eclipse jdt core dom variable declaration expression variabledeclarationexpression org eclipse jdt core dom variable declaration fragment variabledeclarationfragment org eclipse jdt core dom variable declaration statement variabledeclarationstatement org eclipse jdt core dom rewrite import rewrite importrewrite import rewrite context importrewritecontext org eclipse jdt core dom rewrite list rewrite listrewrite org eclipse jdt internal corext dom ast node factory astnodefactory org eclipse jdt internal corext dom ast nodes astnodes org eclipse jdt internal corext dom bindings org eclipse jdt internal corext refactoring structure compilation unit rewrite compilationunitrewrite org eclipse jdt internal corext util java model util javamodelutil org eclipse jdt code generation codegeneration workspace runnable add implementations code link java lang object equals java lang object code code link java lang object hash code hashcode code implementation creates hash code hashcode equals method intended types implementation assumes objects equal provide hash code hashcode values fields equal implementation deal reference types fields super types supertypes implementation calls hash code hashcode equals reference types fields superclass superclass object error types provide equals hash code hashcode implementation comparison hash code creation strong fail strong methods correctly implemented implementation primitive type d typed fields jdk implementations wrapper types java util arrays equals implementation equality declaring check test equals implemented direct subclasses object sufficient sub implementation subimplementation calls equals argument checks equals hash code hashcode methods java util arrays test equality generate hash code arrays note impl ication implication values values border values na n nan equality bit patterns implementation consistent wrapper types java lang java lang generate hash code equals operation generatehashcodeequalsoperation i workspace runnable iworkspacerunnable i hash code access provider ihashcodeaccessprovider expression get this access getthisaccess string nls string java util arrays java util arrays nls string constant nls string constant nls string java lang object java lang object nls string methodname get class getclass get class getclass nls string methodname equals equals nls string methodname deep equals deep equals deepequals nls string methodname hash code hash code hashcode nls string methodname deep hash code deep hash code deephashcode nls string methodname type get outer type getoutertype nls string prime number nls string initial hashcode nls string variable temporary temp nls string variable prime prime nls string variable result result nls string variable equals param obj nls string variable hashcode param array nls string variable equals casted nls string variable edit applied f apply fapply text edit text edit textedit f edit fedit insertion point code code i java element ijavaelement f insert finsert variable binding implement i variable binding ivariablebinding f fields ffields reg eneration regeneration methods enforced f force fforce compilation unit content saved f save fsave code generation settings code generation settings codegenerationsettings f settings fsettings type declaration add methods i type binding itypebinding f type ftype compilation unit ast node compilation unit compilationunit f unit funit cu rewrite curewrite compilation unit rewrite compilationunitrewrite f rewrite frewrite ast convenience accessor field ast f ast fast number type d typed fields handled f double count fdoublecount primitive types generate custom hash code hashcode methods list i type binding itypebinding f custom hash code types fcustomhashcodetypes array list arraylist code code compare types code code f use instance of fuseinstanceof code code blocks f use blocks for then fuseblocksforthen rewrite context initialized link i progress monitor iprogressmonitor import rewrite context importrewritecontext f import rewrite context fimportrewritecontext creates add hash code equals operation param type type add methods param fields method binding implement param unit compilation unit ast node param insert insertion point code code param settings code generation settings param use instanceof useinstanceof code code compare types code code param force code code force reg eneration regeneration existing methods code code param apply code code edit applied code code param save code code changed compilation unit saved code code generate hash code equals operation generatehashcodeequalsoperation i type binding itypebinding type i variable binding ivariablebinding fields compilation unit compilationunit unit i java element ijavaelement insert code generation settings codegenerationsettings settings use instanceof useinstanceof force apply save is not null isnotnull type is not null isnotnull fields is not null isnotnull unit is not null isnotnull settings is true istrue unit get type root gettyperoot i compilation unit icompilationunit f type ftype type f insert finsert insert f unit funit unit f fields ffields fields f settings fsettings settings f use instance of fuseinstanceof use instanceof useinstanceof f save fsave save f apply fapply apply f double count fdoublecount f rewrite frewrite compilation unit rewrite compilationunitrewrite i compilation unit icompilationunit f unit funit get type root gettyperoot f unit funit f force fforce force f ast fast f rewrite frewrite getast f use blocks for then fuseblocksforthen defines statements blocks param use blocks for then useblocksforthen blocks for ced forced statements set use blocks for then setuseblocksforthen use blocks for then useblocksforthen f use blocks for then fuseblocksforthen use blocks for then useblocksforthen returns text edit edit text edit textedit get res ulting edit getresultingedit f edit fedit returns scheduling rule operation scheduling rule i scheduling rule ischedulingrule get scheduling rule getschedulingrule resources plugin resourcesplugin get workspace getworkspace get root getroot org eclipse core resources i workspace runnable iworkspacerunnable org eclipse core runtime i progress monitor iprogressmonitor override i progress monitor iprogressmonitor monitor core exception coreexception monitor monitor null progress monitor nullprogressmonitor nls monitor begin task begintask monitor set task name settaskname code generation messages codegenerationmessages generate hash code equals operation generatehashcodeequalsoperation description f custom hash code types fcustomhashcodetypes clear declaration rewrite abstract type declaration abstracttypedeclaration declaration abstract type declaration abstracttypedeclaration ast nodes astnodes find declaration finddeclaration f type ftype f rewrite frewrite get root getroot list rewrite listrewrite rewriter f rewrite frewrite getastrewrite get list rewrite getlistrewrite declaration declaration get body declarations property getbodydeclarationsproperty list body declaration bodydeclaration list declaration body declarations bodydeclarations f type ftype rewriter i compilation unit icompilationunit i compilation unit icompilationunit f unit funit get java element getjavaelement ast node astnode insertion stub utility stubutility get node to insert before getnodetoinsertbefore rewriter f insert finsert equals i type binding itypebinding object as param objectasparam declaration getast resolve well known type resolvewellknowntype java lang object body declaration bodydeclaration old equals oldequals f force fforce find method to replace findmethodtoreplace list methodname equals object as param objectasparam f import rewrite context fimportrewritecontext context sensitive import rewrite context contextsensitiveimportrewritecontext declaration f rewrite frewrite get import rewrite getimportrewrite method declaration methoddeclaration equals method equalsmethod create equals method createequalsmethod add method addmethod rewriter insertion equals method equalsmethod old equals oldequals monitor is canceled iscanceled operation canceled exception operationcanceledexception hash code hashcode body declaration bodydeclaration old hash oldhash f force fforce find method to replace findmethodtoreplace list methodname hash code i type binding itypebinding method declaration methoddeclaration hash code method hashcodemethod create hash code method createhashcodemethod add method addmethod rewriter equals method equalsmethod hash code method hashcodemethod old hash oldhash helpers iterator i type binding itypebinding iterator f custom hash code types fcustomhashcodetypes iterator iterator has next hasnext i type binding itypebinding binding iterator find method to replace findmethodtoreplace list methodname hash code object as param objectasparam method declaration methoddeclaration helper decl helperdecl create hash code helper createhashcodehelper binding add helper addhelper rewriter helper decl helperdecl is member type ismembertype find method to replace findmethodtoreplace list methodname type i type binding itypebinding method declaration methoddeclaration helper decl helperdecl create get outer helper creategetouterhelper rewriter insert last insertlast helper decl helperdecl f edit fedit f rewrite frewrite create change createchange get edit getedit f apply fapply java model util javamodelutil apply edit applyedit f edit fedit f save fsave monitor monitor is member type ismembertype f type ftype is member ismember modifier is static isstatic f type ftype get modifiers getmodifiers body declaration bodydeclaration find method to replace findmethodtoreplace list body declaration bodydeclaration list string i type binding itypebinding param types paramtypes iterator body declaration bodydeclaration iterator list iterator iterator has next hasnext body declaration bodydeclaration body decl bodydecl iterator body decl bodydecl method declaration methoddeclaration method declaration methoddeclaration method method declaration methoddeclaration body decl bodydecl i method binding imethodbinding binding method resolve binding resolvebinding binding binding get name getname equals bindings equals binding get parameter types getparametertypes param types paramtypes method add helper addhelper list rewrite listrewrite rewriter ast node astnode insertion method declaration methoddeclaration stub insertion rewriter insert before insertbefore stub insertion rewriter insert first insertfirst stub add method addmethod list rewrite listrewrite rewriter ast node astnode insertion method declaration methoddeclaration stub body declaration bodydeclaration replace replace rewriter replace replace stub insertion rewriter insert before insertbefore stub insertion rewriter insert last insertlast stub hashcode method declaration methoddeclaration create hash code method createhashcodemethod core exception coreexception method declaration methoddeclaration hash code method hashcodemethod f ast fast new method declaration newmethoddeclaration hash code method hashcodemethod modifiers add all addall ast node factory astnodefactory new modifiers newmodifiers f ast fast modifier hash code method hashcodemethod set name setname f ast fast new simple name newsimplename methodname hash code hash code method hashcodemethod set constructor setconstructor hash code method hashcodemethod set return type setreturntype f ast fast new primitive type newprimitivetype primitive type primitivetype block body f ast fast new block newblock hash code method hashcodemethod set body setbody body prime number variable declaration fragment variabledeclarationfragment frag f ast fast new variable declaration fragment newvariabledeclarationfragment frag set name setname f ast fast new simple name newsimplename variable prime frag set initializer setinitializer f ast fast new number literal newnumberliteral prime number variable declaration statement variabledeclarationstatement prime number declaration primenumberdeclaration f ast fast new variable declaration statement newvariabledeclarationstatement frag prime number declaration primenumberdeclaration modifiers add f ast fast new modifier newmodifier modifier keyword modifierkeyword keyword prime number declaration primenumberdeclaration set type settype f ast fast new primitive type newprimitivetype primitive type primitivetype body statements add prime number declaration primenumberdeclaration result variable declaration fragment variabledeclarationfragment fragment f ast fast new variable declaration fragment newvariabledeclarationfragment fragment set name setname f ast fast new simple name newsimplename variable result variable declaration statement variabledeclarationstatement result declaration resultdeclaration f ast fast new variable declaration statement newvariabledeclarationstatement fragment result declaration resultdeclaration set type settype f ast fast new primitive type newprimitivetype primitive type primitivetype body statements add result declaration resultdeclaration needs no super call needsnosupercall f type ftype methodname hash code i type binding itypebinding fragment set initializer setinitializer f ast fast new number literal newnumberliteral initial hashcode super method invocation supermethodinvocation invoc f ast fast new super method invocation newsupermethodinvocation invoc set name setname f ast fast new simple name newsimplename methodname hash code fragment set initializer setinitializer invoc is member type ismembertype body statements add create add outer hash code createaddouterhashcode f fields ffields length f fields ffields get type gettype is primitive isprimitive statement sts create add simple hash code createaddsimplehashcode f fields ffields get type gettype i hash code access provider ihashcodeaccessprovider override expression get this access getthisaccess string get this access for hash code getthisaccessforhashcode f fields ffields get name getname sts length body statements add sts f fields ffields get type gettype is array isarray body statements add create add array hash code createaddarrayhashcode f fields ffields body statements add create add qualified hash code createaddqualifiedhashcode f fields ffields return statement returnstatement end return endreturn f ast fast new return statement newreturnstatement end return endreturn set expression setexpression f ast fast new simple name newsimplename variable result body statements add end return endreturn method comment f settings fsettings i type binding itypebinding object f ast fast resolve well known type resolvewellknowntype java lang object i method binding imethodbinding obj ms objms object get declared methods getdeclaredmethods i method binding imethodbinding object method objectmethod obj ms objms length obj ms objms get name getname equals methodname hash code obj ms objms get parameter types getparametertypes length object method objectmethod obj ms objms create method comment createmethodcomment hash code method hashcodemethod object method objectmethod hash code method hashcodemethod statement create add outer hash code createaddouterhashcode method invocation methodinvocation f ast fast new method invocation newmethodinvocation set name setname f ast fast new simple name newsimplename methodname type method invocation methodinvocation hash access hashaccess f ast fast new method invocation newmethodinvocation hash access hashaccess set name setname f ast fast new simple name newsimplename methodname hash code hash access hashaccess set expression setexpression prepare assignment prepareassignment hash access hashaccess statement create add simple hash code createaddsimplehashcode i type binding itypebinding type i hash code access provider ihashcodeaccessprovider provider string single temp singletemp list statement statements array list arraylist type is primitive isprimitive element element hash code hashcode conditional expression conditionalexpression f ast fast new conditional expression newconditionalexpression infix expression infixexpression exp f ast fast new infix expression newinfixexpression array access arrayaccess access f ast fast new array access newarrayaccess access set array setarray f ast fast new simple name newsimplename variable hashcode param access set index setindex f ast fast new simple name newsimplename variable exp set left operand setleftoperand access exp set operator setoperator equals exp set right operand setrightoperand f ast fast new null literal newnullliteral set expression setexpression exp nls set then expression setthenexpression f ast fast new number literal newnumberliteral method invocation methodinvocation invoc f ast fast new method invocation newmethodinvocation access f ast fast new array access newarrayaccess access set array setarray f ast fast new simple name newsimplename variable hashcode param access set index setindex f ast fast new simple name newsimplename variable invoc set expression setexpression access invoc set name setname f ast fast new simple name newsimplename methodname hash code set else expression setelseexpression invoc statements add prepare assignment prepareassignment parent hesize parenthesize is primitive type isprimitivetype type primitive type primitivetype conditional expression conditionalexpression f ast fast new conditional expression newconditionalexpression set expression setexpression provider get this access getthisaccess hash code hashcode set then expression setthenexpression f ast fast new number literal newnumberliteral constant set else expression setelseexpression f ast fast new number literal newnumberliteral constant statements add prepare assignment prepareassignment parent hesize parenthesize is primitive type isprimitivetype type primitive type primitivetype code primitive type primitivetype primitive type primitivetype primitive type primitivetype primitive type primitivetype statements add prepare assignment prepareassignment provider get this access getthisaccess is primitive type isprimitivetype type primitive type primitivetype float to int bits floattointbits a float afloat statements add prepare assignment prepareassignment create float invocation createfloatinvocation provider get this access getthisaccess is primitive type isprimitivetype type primitive type primitivetype statements add prepare assignment prepareassignment create shift assignment createshiftassignment provider get this access getthisaccess provider get this access getthisaccess is primitive type isprimitivetype type primitive type primitivetype variable declaration fragment variabledeclarationfragment fragment single temp singletemp f double count fdoublecount fragment f ast fast new variable declaration fragment newvariabledeclarationfragment fragment set name setname f ast fast new simple name newsimplename variable temporary variable declaration statement variabledeclarationstatement f ast fast new variable declaration statement newvariabledeclarationstatement fragment set type settype f ast fast new primitive type newprimitivetype primitive type primitivetype statements add f double count fdoublecount double to int bits doubletointbits a double adouble expression comparison create double invocation createdoubleinvocation provider get this access getthisaccess single temp singletemp fragment set initializer setinitializer comparison assignment ass f ast fast new assignment newassignment ass set left hand side setlefthandside f ast fast new simple name newsimplename variable temporary ass set right hand side setrighthandside comparison statements add f ast fast new expression statement newexpressionstatement ass statements add prepare assignment prepareassignment create shift assignment createshiftassignment f ast fast new simple name newsimplename variable temporary f ast fast new simple name newsimplename variable temporary statements to array toarray statement statements size statement create add array hash code createaddarrayhashcode i variable binding ivariablebinding binding method invocation methodinvocation invoc f ast fast new method invocation newmethodinvocation java model util javamodelutil or higher orhigher f rewrite frewrite get cu getcu get java project getjavaproject binding get type gettype get dimensions getdimensions invoc set name setname f ast fast new simple name newsimplename methodname deep hash code invoc set name setname f ast fast new simple name newsimplename methodname hash code invoc set expression setexpression get qualified name getqualifiedname java util arrays invoc arguments add get this access for hash code getthisaccessforhashcode binding get name getname invoc set name setname f ast fast new simple name newsimplename methodname hash code i java element ijavaelement element f type ftype get java element getjavaelement nls element equals element get element name getelementname invoc set expression setexpression f ast fast new simple name newsimplename element get element name getelementname invoc arguments add get this access for hash code getthisaccessforhashcode binding get name getname i type binding itypebinding type binding get type gettype get element type getelementtype bindings is void type isvoidtype type type is primitive isprimitive binding get type gettype get dimensions getdimensions type f ast fast resolve well known type resolvewellknowntype java lang object f custom hash code types fcustomhashcodetypes type f custom hash code types fcustomhashcodetypes add type prepare assignment prepareassignment invoc method declaration methoddeclaration create get outer helper creategetouterhelper string outer type name outertypename f type ftype get declaring class getdeclaringclass get type declaration gettypedeclaration get name getname method declaration methoddeclaration helper method helpermethod f ast fast new method declaration newmethoddeclaration helper method helpermethod modifiers add all addall ast node factory astnodefactory new modifiers newmodifiers f ast fast modifier helper method helpermethod set name setname f ast fast new simple name newsimplename methodname type helper method helpermethod set constructor setconstructor helper method helpermethod set return type setreturntype f ast fast new simple type newsimpletype f ast fast new simple name newsimplename outer type name outertypename block body f ast fast new block newblock helper method helpermethod set body setbody body this expression thisexpression this expression thisexpression f ast fast new this expression newthisexpression this expression thisexpression set qualifier setqualifier f ast fast new simple name newsimplename outer type name outertypename return statement returnstatement end return endreturn f ast fast new return statement newreturnstatement end return endreturn set expression setexpression this expression thisexpression body statements add end return endreturn helper method helpermethod method declaration methoddeclaration create hash code helper createhashcodehelper i type binding itypebinding binding is true istrue binding is array isarray method declaration methoddeclaration hash code method hashcodemethod f ast fast new method declaration newmethoddeclaration hash code method hashcodemethod modifiers add all addall ast node factory astnodefactory new modifiers newmodifiers f ast fast modifier modifier hash code method hashcodemethod set name setname f ast fast new simple name newsimplename methodname hash code hash code method hashcodemethod set constructor setconstructor hash code method hashcodemethod set return type setreturntype f ast fast new primitive type newprimitivetype primitive type primitivetype arguments list single variable declaration singlevariabledeclaration parameters hash code method hashcodemethod parameters single variable declaration singlevariabledeclaration hash code param hashcodeparam f ast fast new single variable declaration newsinglevariabledeclaration binding is primitive isprimitive hash code param hashcodeparam set type settype f ast fast new array type newarraytype f ast fast new simple type newsimpletype get qualified name getqualifiedname java lang object hash code param hashcodeparam set type settype f ast fast new array type newarraytype f ast fast new primitive type newprimitivetype primitive type primitivetype to code tocode binding get name getname hash code param hashcodeparam set name setname f ast fast new simple name newsimplename variable hashcode param parameters add hash code param hashcodeparam block body f ast fast new block newblock hash code method hashcodemethod set body setbody body prime number variable declaration fragment variabledeclarationfragment frag f ast fast new variable declaration fragment newvariabledeclarationfragment frag set name setname f ast fast new simple name newsimplename variable prime frag set initializer setinitializer f ast fast new number literal newnumberliteral prime number variable declaration statement variabledeclarationstatement prime number declaration primenumberdeclaration f ast fast new variable declaration statement newvariabledeclarationstatement frag prime number declaration primenumberdeclaration set type settype f ast fast new primitive type newprimitivetype primitive type primitivetype body statements add prime number declaration primenumberdeclaration statement if statement ifstatement if statement ifstatement f ast fast new if statement newifstatement infix expression infixexpression new infix expression newinfixexpression f ast fast new infix expression newinfixexpression new infix expression newinfixexpression set left operand setleftoperand f ast fast new simple name newsimplename variable hashcode param new infix expression newinfixexpression set right operand setrightoperand f ast fast new null literal newnullliteral new infix expression newinfixexpression set operator setoperator equals if statement ifstatement set expression setexpression new infix expression newinfixexpression return statement returnstatement return statement returnstatement f ast fast new return statement newreturnstatement nls return statement returnstatement set expression setexpression f ast fast new number literal newnumberliteral if statement ifstatement set then statement setthenstatement get then statement getthenstatement return statement returnstatement body statements add if statement ifstatement result variable declaration fragment variabledeclarationfragment result fragment resultfragment f ast fast new variable declaration fragment newvariabledeclarationfragment result fragment resultfragment set name setname f ast fast new simple name newsimplename variable result result fragment resultfragment set initializer setinitializer f ast fast new number literal newnumberliteral initial hashcode variable declaration statement variabledeclarationstatement result declaration resultdeclaration f ast fast new variable declaration statement newvariabledeclarationstatement result fragment resultfragment result declaration resultdeclaration set type settype f ast fast new primitive type newprimitivetype primitive type primitivetype body statements add result declaration resultdeclaration loop for statement forstatement for statement forstatement f ast fast new for statement newforstatement variable declaration fragment variabledeclarationfragment index declaration indexdeclaration f ast fast new variable declaration fragment newvariabledeclarationfragment index declaration indexdeclaration set name setname f ast fast new simple name newsimplename variable nls index declaration indexdeclaration set initializer setinitializer f ast fast new number literal newnumberliteral variable declaration expression variabledeclarationexpression decl expression declexpression f ast fast new variable declaration expression newvariabledeclarationexpression index declaration indexdeclaration decl expression declexpression set type settype f ast fast new primitive type newprimitivetype primitive type primitivetype for statement forstatement initializers add decl expression declexpression infix expression infixexpression infix expr infixexpr f ast fast new infix expression newinfixexpression infix expr infixexpr set left operand setleftoperand f ast fast new simple name newsimplename variable field access fieldaccess access f ast fast new field access newfieldaccess access set expression setexpression f ast fast new simple name newsimplename variable hashcode param nls access set name setname f ast fast new simple name newsimplename length infix expr infixexpr set right operand setrightoperand access infix expr infixexpr set operator setoperator for statement forstatement set expression setexpression infix expr infixexpr postfix expression postfixexpression postfix expr postfixexpr f ast fast new postfix expression newpostfixexpression postfix expr postfixexpr set operand setoperand f ast fast new simple name newsimplename variable postfix expr postfixexpr set operator setoperator org eclipse jdt core dom postfix expression postfixexpression increment for statement forstatement update rs updaters add postfix expr postfixexpr body statements add for statement forstatement block for body forbody f ast fast new block newblock statement statements create add simple hash code createaddsimplehashcode binding i hash code access provider ihashcodeaccessprovider override expression get this access getthisaccess string array access arrayaccess f ast fast new array access newarrayaccess set array setarray f ast fast new simple name newsimplename variable hashcode param set index setindex f ast fast new simple name newsimplename variable statements length for body forbody statements add statements for statement forstatement set body setbody for body forbody return statement returnstatement end return endreturn f ast fast new return statement newreturnstatement end return endreturn set expression setexpression f ast fast new simple name newsimplename variable result body statements add end return endreturn comment f settings fsettings f settings fsettings create comments createcomments javadoc javadoc f ast fast new javadoc newjavadoc tag element tagelement tag comment tagcomment f ast fast new tag element newtagelement text element textelement text f ast fast new text element newtextelement text set text settext code generation messages codegenerationmessages generate hash code equals operation generatehashcodeequalsoperation hash code comment tag comment tagcomment fragments add text javadoc tags add tag comment tagcomment tag element tagelement tag param tagparam f ast fast new tag element newtagelement tag param tagparam set tag name settagname code generation messages codegenerationmessages generate hash code equals operation generatehashcodeequalsoperation tag param tag param tagparam fragments add f ast fast new simple name newsimplename variable hashcode param text f ast fast new text element newtextelement text set text settext code generation messages codegenerationmessages generate hash code equals operation generatehashcodeequalsoperation hash code argument tag param tagparam fragments add text javadoc tags add tag param tagparam tag element tagelement tag return tagreturn f ast fast new tag element newtagelement tag return tagreturn set tag name settagname code generation messages codegenerationmessages generate hash code equals operation generatehashcodeequalsoperation tag text f ast fast new text element newtextelement text set text settext code generation messages codegenerationmessages generate hash code equals operation generatehashcodeequalsoperation comment tag return tagreturn fragments add text javadoc tags add tag return tagreturn hash code method hashcodemethod set javadoc setjavadoc javadoc hash code method hashcodemethod statement create add qualified hash code createaddqualifiedhashcode i variable binding ivariablebinding binding method invocation methodinvocation invoc f ast fast new method invocation newmethodinvocation invoc set expression setexpression get this access for hash code getthisaccessforhashcode binding get name getname invoc set name setname f ast fast new simple name newsimplename methodname hash code infix expression infixexpression expr f ast fast new infix expression newinfixexpression expr set operator setoperator equals expr set left operand setleftoperand get this access for hash code getthisaccessforhashcode binding get name getname expr set right operand setrightoperand f ast fast new null literal newnullliteral conditional expression conditionalexpression cexpr f ast fast new conditional expression newconditionalexpression nls cexpr set then expression setthenexpression f ast fast new number literal newnumberliteral cexpr set else expression setelseexpression invoc cexpr set expression setexpression parent hesize parenthesize expr prepare assignment prepareassignment parent hesize parenthesize cexpr expression create shift assignment createshiftassignment expression shift expression shift element element implementation arrays hash code hashcode hash code hashcode hash code hashcode cast expression castexpression f ast fast new cast expression newcastexpression set type settype f ast fast new primitive type newprimitivetype primitive type primitivetype infix expression infixexpression unsigned shift right unsignedshiftright f ast fast new infix expression newinfixexpression unsigned shift right unsignedshiftright set left operand setleftoperand shift nls unsigned shift right unsignedshiftright set right operand setrightoperand f ast fast new number literal newnumberliteral unsigned shift right unsignedshiftright set operator setoperator shift unsigned infix expression infixexpression xor f ast fast new infix expression newinfixexpression xor set left operand setleftoperand shift xor set right operand setrightoperand parent hesize parenthesize unsigned shift right unsignedshiftright xor set operator setoperator infix expression infixexpression xor set expression setexpression parent hesize parenthesize xor statement prepare assignment prepareassignment expression right hand righthand result prime result infix expression infixexpression mul f ast fast new infix expression newinfixexpression mul set left operand setleftoperand f ast fast new simple name newsimplename variable prime mul set right operand setrightoperand f ast fast new simple name newsimplename variable result mul set operator setoperator times assignment ass f ast fast new assignment newassignment ass set left hand side setlefthandside f ast fast new simple name newsimplename variable result infix expression infixexpression f ast fast new infix expression newinfixexpression set left operand setleftoperand mul set operator setoperator set right operand setrightoperand right hand righthand ass set right hand side setrighthandside f ast fast new expression statement newexpressionstatement ass equals method declaration methoddeclaration create equals method createequalsmethod core exception coreexception method declaration methoddeclaration equals method declaration equalsmethoddeclaration f ast fast new method declaration newmethoddeclaration equals method declaration equalsmethoddeclaration modifiers add all addall ast node factory astnodefactory new modifiers newmodifiers f ast fast modifier equals method declaration equalsmethoddeclaration set name setname f ast fast new simple name newsimplename methodname equals equals method declaration equalsmethoddeclaration set constructor setconstructor equals method declaration equalsmethoddeclaration set return type setreturntype f ast fast new primitive type newprimitivetype primitive type primitivetype list single variable declaration singlevariabledeclaration parameters equals method declaration equalsmethoddeclaration parameters single variable declaration singlevariabledeclaration equals param equalsparam f ast fast new single variable declaration newsinglevariabledeclaration equals param equalsparam set type settype f rewrite frewrite get import rewrite getimportrewrite add import addimport f ast fast resolve well known type resolvewellknowntype java lang object f ast fast f import rewrite context fimportrewritecontext equals param equalsparam set name setname f ast fast new simple name newsimplename variable equals param parameters add equals param equalsparam block body f ast fast new block newblock equals method declaration equalsmethoddeclaration set body setbody body obj body statements add create returning if statement createreturningifstatement f ast fast new this expression newthisexpression f ast fast new simple name newsimplename variable equals param equals needs no super call needsnosupercall f type ftype methodname equals i type binding itypebinding f ast fast resolve well known type resolvewellknowntype java lang object obj body statements add create returning if statement createreturningifstatement f ast fast new simple name newsimplename variable equals param f ast fast new null literal newnullliteral equals equals obj super method invocation supermethodinvocation super equals call superequalscall f ast fast new super method invocation newsupermethodinvocation super equals call superequalscall set name setname f ast fast new simple name newsimplename methodname equals super equals call superequalscall arguments add f ast fast new simple name newsimplename variable equals param prefix expression prefixexpression f ast fast new prefix expression newprefixexpression set operator setoperator prefix expression prefixexpression set operand setoperand super equals call superequalscall if statement ifstatement super equals if superequalsif f ast fast new if statement newifstatement super equals if superequalsif set expression setexpression super equals if superequalsif set then statement setthenstatement get then statement getthenstatement get return false getreturnfalse body statements add super equals if superequalsif f use instance of fuseinstanceof obj type instanceof expression instanceofexpression expression f ast fast new instanceof expression newinstanceofexpression expression set left operand setleftoperand f ast fast new simple name newsimplename variable equals param expression set right operand setrightoperand f rewrite frewrite get import rewrite getimportrewrite add import addimport f type ftype f ast fast f import rewrite context fimportrewritecontext prefix expression prefixexpression not expression notexpression f ast fast new prefix expression newprefixexpression not expression notexpression set operator setoperator org eclipse jdt core dom prefix expression prefixexpression parenthesized expression parenthesizedexpression parenthesized expression parenthesizedexpression f ast fast new parenthesized expression newparenthesizedexpression parenthesized expression parenthesizedexpression set expression setexpression expression not expression notexpression set operand setoperand parenthesized expression parenthesizedexpression body statements add create returning if statement createreturningifstatement not expression notexpression get class getclass obj get class getclass method invocation methodinvocation this class thisclass f ast fast new method invocation newmethodinvocation this class thisclass set name setname f ast fast new simple name newsimplename methodname get class getclass method invocation methodinvocation obj get class objgetclass f ast fast new method invocation newmethodinvocation obj get class objgetclass set expression setexpression f ast fast new simple name newsimplename variable equals param obj get class objgetclass set name setname f ast fast new simple name newsimplename methodname get class getclass body statements add create returning if statement createreturningifstatement this class thisclass obj get class objgetclass equals type type obj variable declaration fragment variabledeclarationfragment f ast fast new variable declaration fragment newvariabledeclarationfragment set name setname f ast fast new simple name newsimplename variable equals casted cast expression castexpression f ast fast new cast expression newcastexpression set type settype f ast fast new simple type newsimpletype f ast fast new simple name newsimplename f type ftype get name getname set expression setexpression f ast fast new simple name newsimplename variable equals param set initializer setinitializer variable declaration statement variabledeclarationstatement other declaration otherdeclaration f ast fast new variable declaration statement newvariabledeclarationstatement other declaration otherdeclaration set type settype f ast fast new simple type newsimpletype f ast fast new simple name newsimplename f type ftype get name getname body statements add other declaration otherdeclaration test type is member type ismembertype body statements add create outer comparison createoutercomparison f fields ffields length i variable binding ivariablebinding field f fields ffields i type binding itypebinding type field get type gettype type is primitive isprimitive type is enum isenum body statements add create simple comparison createsimplecomparison field type is array isarray i java project ijavaproject project f unit funit get java element getjavaelement get java project getjavaproject type get dimensions getdimensions java model util javamodelutil or higher orhigher project body statements add create multi array comparison createmultiarraycomparison field get name getname body statements add create array comparison createarraycomparison field get name getname body statements add create qualified comparison createqualifiedcomparison field get name getname return statement returnstatement end return endreturn f ast fast new return statement newreturnstatement end return endreturn set expression setexpression f ast fast new boolean literal newbooleanliteral body statements add end return endreturn method comment f settings fsettings i type binding itypebinding object f ast fast resolve well known type resolvewellknowntype java lang object i method binding imethodbinding obj ms objms object get declared methods getdeclaredmethods i method binding imethodbinding object method objectmethod obj ms objms length obj ms objms get name getname equals methodname equals obj ms objms get parameter types getparametertypes length obj ms objms get parameter types getparametertypes get qualified name getqualifiedname equals java lang object object method objectmethod obj ms objms create method comment createmethodcomment equals method declaration equalsmethoddeclaration object method objectmethod equals method declaration equalsmethoddeclaration statement create outer comparison createoutercomparison method invocation methodinvocation f ast fast new method invocation newmethodinvocation set name setname f ast fast new simple name newsimplename methodname type method invocation methodinvocation f ast fast new method invocation newmethodinvocation set name setname f ast fast new simple name newsimplename methodname type set expression setexpression f ast fast new simple name newsimplename variable equals casted method invocation methodinvocation outer eql outereql f ast fast new method invocation newmethodinvocation outer eql outereql set name setname f ast fast new simple name newsimplename methodname equals outer eql outereql set expression setexpression outer eql outereql arguments add prefix expression prefixexpression f ast fast new prefix expression newprefixexpression set operand setoperand outer eql outereql set operator setoperator prefix expression prefixexpression if statement ifstatement not eq null noteqnull f ast fast new if statement newifstatement not eq null noteqnull set expression setexpression not eq null noteqnull set then statement setthenstatement get then statement getthenstatement get return false getreturnfalse not eq null noteqnull statement create simple comparison createsimplecomparison i variable binding ivariablebinding binding is primitive type isprimitivetype binding get type gettype primitive type primitivetype create returning if statement createreturningifstatement create float invocation createfloatinvocation get this access for equals getthisaccessforequals binding get name getname create float invocation createfloatinvocation get other access getotheraccess binding get name getname equals is primitive type isprimitivetype binding get type gettype primitive type primitivetype create returning if statement createreturningifstatement create double invocation createdoubleinvocation get this access for equals getthisaccessforequals binding get name getname create double invocation createdoubleinvocation get other access getotheraccess binding get name getname equals create returning if statement createreturningifstatement get this access for equals getthisaccessforequals binding get name getname get other access getotheraccess binding get name getname equals statement create array comparison createarraycomparison string method invocation methodinvocation invoc f ast fast new method invocation newmethodinvocation invoc set name setname f ast fast new simple name newsimplename methodname equals invoc set expression setexpression get qualified name getqualifiedname java util arrays invoc arguments add get this access for equals getthisaccessforequals invoc arguments add get other access getotheraccess prefix expression prefixexpression f ast fast new prefix expression newprefixexpression set operator setoperator prefix expression prefixexpression set operand setoperand invoc if statement ifstatement if st ifst f ast fast new if statement newifstatement if st ifst set expression setexpression if st ifst set then statement setthenstatement get then statement getthenstatement get return false getreturnfalse if st ifst statement create multi array comparison createmultiarraycomparison string method invocation methodinvocation invoc f ast fast new method invocation newmethodinvocation invoc set name setname f ast fast new simple name newsimplename methodname deep equals invoc set expression setexpression get qualified name getqualifiedname java util arrays invoc arguments add get this access for equals getthisaccessforequals invoc arguments add get other access getotheraccess prefix expression prefixexpression f ast fast new prefix expression newprefixexpression set operator setoperator prefix expression prefixexpression set operand setoperand invoc if statement ifstatement if st ifst f ast fast new if statement newifstatement if st ifst set expression setexpression if st ifst set then statement setthenstatement get then statement getthenstatement get return false getreturnfalse if st ifst creates comparison reference types pre equals pre param field comparison statement statement create qualified comparison createqualifiedcomparison string infix expression infixexpression new condition newcondition f ast fast new infix expression newinfixexpression new condition newcondition set operator setoperator equals new condition newcondition set left operand setleftoperand get this access for equals getthisaccessforequals new condition newcondition set right operand setrightoperand f ast fast new null literal newnullliteral infix expression infixexpression not eq null noteqnull f ast fast new infix expression newinfixexpression not eq null noteqnull set operator setoperator equals not eq null noteqnull set left operand setleftoperand get other access getotheraccess not eq null noteqnull set right operand setrightoperand f ast fast new null literal newnullliteral if statement ifstatement then part thenpart f ast fast new if statement newifstatement then part thenpart set expression setexpression not eq null noteqnull then part thenpart set then statement setthenstatement get then statement getthenstatement get return false getreturnfalse block then part thenpart f ast fast new block newblock then part thenpart statements add then part thenpart method invocation methodinvocation invoc f ast fast new method invocation newmethodinvocation invoc set name setname f ast fast new simple name newsimplename methodname equals invoc set expression setexpression get this access for equals getthisaccessforequals invoc arguments add get other access getotheraccess prefix expression prefixexpression f ast fast new prefix expression newprefixexpression set operator setoperator prefix expression prefixexpression set operand setoperand invoc if statement ifstatement else part elsepart f ast fast new if statement newifstatement else part elsepart set expression setexpression else part elsepart set then statement setthenstatement get then statement getthenstatement get return false getreturnfalse if statement ifstatement is null isnull f ast fast new if statement newifstatement is null isnull set expression setexpression new condition newcondition is null isnull set then statement setthenstatement then part thenpart is null isnull set else statement setelsestatement else part elsepart is null isnull help ers helpers statement create returning if statement createreturningifstatement expression left expression what to return whattoreturn infix expression infixexpression new condition newcondition f ast fast new infix expression newinfixexpression new condition newcondition set operator setoperator new condition newcondition set left operand setleftoperand left new condition newcondition set right operand setrightoperand create returning if statement createreturningifstatement what to return whattoreturn new condition newcondition statement create returning if statement createreturningifstatement result expression condition if statement ifstatement first if firstif f ast fast new if statement newifstatement first if firstif set expression setexpression condition return statement returnstatement ret urner returner f ast fast new return statement newreturnstatement ret urner returner set expression setexpression f ast fast new boolean literal newbooleanliteral result first if firstif set then statement setthenstatement get then statement getthenstatement ret urner returner first if firstif create method comment createmethodcomment method declaration methoddeclaration new declaration newdeclaration i method binding imethodbinding copy from copyfrom core exception coreexception f settings fsettings create comments createcomments string string code generation codegeneration get method comment getmethodcomment f rewrite frewrite get cu getcu f type ftype get qualified name getqualifiedname new declaration newdeclaration copy from copyfrom stub utility stubutility get line delimiter used getlinedelimiterused f rewrite frewrite get cu getcu string javadoc javadoc javadoc f rewrite frewrite getastrewrite create string placeholder createstringplaceholder string ast node astnode javadoc new declaration newdeclaration set javadoc setjavadoc javadoc i java project ijavaproject project f unit funit get java element getjavaelement get java project getjavaproject stub utility stubutility add override annotation addoverrideannotation f settings fsettings project f rewrite frewrite getastrewrite f rewrite frewrite get import rewrite getimportrewrite new declaration newdeclaration copy from copyfrom get declaring class getdeclaringclass is interface isinterface needs no super call needsnosupercall i type binding itypebinding type binding typebinding string i type binding itypebinding parameters is not null isnotnull type binding typebinding i method binding imethodbinding binding bindings find method in hierarchy findmethodinhierarchy type binding typebinding get superclass getsuperclass parameters binding modifier is abstract isabstract binding get modifiers getmodifiers i type binding itypebinding declaring binding get declaring class getdeclaringclass declaring get qualified name getqualifiedname equals java lang object expression get this access for equals getthisaccessforequals string get this access getthisaccess expression get this access for hash code getthisaccessforhashcode string get this access getthisaccess expression get this access getthisaccess string for hash code forhashcode f settings fsettings use keyword this usekeywordthis needs this qualification needsthisqualification for hash code forhashcode field access fieldaccess f ast fast new field access newfieldaccess set expression setexpression f ast fast new this expression newthisexpression set name setname f ast fast new simple name newsimplename f ast fast new simple name newsimplename expression get other access getotheraccess string f ast fast new qualified name newqualifiedname f ast fast new simple name newsimplename variable equals casted f ast fast new simple name newsimplename is primitive type isprimitivetype i type binding itypebinding binding primitive type primitivetype code code binding get name getname equals code to string tostring is primitive type isprimitivetype i type binding itypebinding type primitive type primitivetype code codes codes length primitive type primitivetype code code codes is primitive type isprimitivetype type code get qualified name getqualifiedname string string imported type importedtype f rewrite frewrite get import rewrite getimportrewrite add import addimport f import rewrite context fimportrewritecontext ast node factory astnodefactory new name newname f ast fast imported type importedtype return statement returnstatement get return false getreturnfalse return statement returnstatement false return falsereturn f ast fast new return statement newreturnstatement false return falsereturn set expression setexpression f ast fast new boolean literal newbooleanliteral false return falsereturn statement get then statement getthenstatement statement statement f use blocks for then fuseblocksforthen statement block block block f ast fast new block newblock block statements add statement block statement expression parent hesize parenthesize expression expression parenthesized expression parenthesizedexpression f ast fast new parenthesized expression newparenthesizedexpression set expression setexpression expression expression create float invocation createfloatinvocation expression access nls nls create method invocation createmethodinvocation access java lang float to int bits floattointbits expression create double invocation createdoubleinvocation expression access nls nls create method invocation createmethodinvocation access java lang double to long bits doubletolongbits expression create method invocation createmethodinvocation expression access string qualified class name qualifiedclassname string method name methodname method invocation methodinvocation invoc f ast fast new method invocation newmethodinvocation invoc set expression setexpression get qualified name getqualifiedname qualified class name qualifiedclassname invoc set name setname f ast fast new simple name newsimplename method name methodname invoc arguments add access invoc needs this qualification needsthisqualification string is hash code ishashcode is hash code ishashcode f double count fdoublecount equals variable temporary equals variable prime equals variable result equals variable equals casted equals variable equals param