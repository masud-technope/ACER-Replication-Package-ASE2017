copyright y atta yatta solutions gmb h gmbh rights reserved program accompanying materials terms eclipse license accompanies distribution http eclipse org legal epl html contributors lukas hanke hanke yatta bug quick quickfix iterate collection https bugs eclipse org bugs bug cgi lukas hanke hanke yatta bug quick quick loop bar e bare local variable argument field https bugs eclipse org bugs bug cgi org eclipse jdt internal text correction proposals java util collection java util iterator java util list org eclipse core runtime core exception coreexception org eclipse jface text link linked position linkedposition org eclipse jface text link linked position group linkedpositiongroup org eclipse jdt core i compilation unit icompilationunit org eclipse jdt core dom ast org eclipse jdt core dom ast node astnode org eclipse jdt core dom array access arrayaccess org eclipse jdt core dom assignment org eclipse jdt core dom block org eclipse jdt core dom compilation unit compilationunit org eclipse jdt core dom enhanced for statement enhancedforstatement org eclipse jdt core dom expression org eclipse jdt core dom expression statement expressionstatement org eclipse jdt core dom field access fieldaccess org eclipse jdt core dom for statement forstatement org eclipse jdt core dom i method binding imethodbinding org eclipse jdt core dom i type binding itypebinding org eclipse jdt core dom infix expression infixexpression org eclipse jdt core dom method invocation methodinvocation org eclipse jdt core dom number literal numberliteral org eclipse jdt core dom postfix expression postfixexpression org eclipse jdt core dom primitive type primitivetype org eclipse jdt core dom simple name simplename org eclipse jdt core dom single variable declaration singlevariabledeclaration org eclipse jdt core dom statement org eclipse jdt core dom variable declaration expression variabledeclarationexpression org eclipse jdt core dom variable declaration fragment variabledeclarationfragment org eclipse jdt core dom rewrite ast rewrite astrewrite org eclipse jdt internal corext code manipulation codemanipulation context sensitive import rewrite context contextsensitiveimportrewritecontext org eclipse jdt internal corext code manipulation codemanipulation stub utility stubutility org eclipse jdt internal corext dom ast nodes astnodes org eclipse jdt internal corext dom bindings org eclipse jdt internal corext dom scope analyzer scopeanalyzer org eclipse jdt internal java plugin images javapluginimages org eclipse jdt internal text correction correction messages correctionmessages org eclipse jdt internal text correction i proposal relevance iproposalrelevance generates proposal quick assist loop variable method result represents link iterable array generate for loop assist proposal generateforloopassistproposal linked correction proposal linkedcorrectionproposal generate for each foreach generate iterator generate iterate array generate iterate list expression statement expressionstatement f current statement fcurrentstatement expression f current expression fcurrentexpression i type binding itypebinding f expression type fexpressiontype f loop type to generate flooptypetogenerate creates instance link generate for loop assist proposal generateforloopassistproposal param current link i compilation unit icompilationunit param current statement currentstatement link expression statement expressionstatement representing statement assist called param loop type to generate looptypetogenerate type loop generate values link generate for loop assist proposal generateforloopassistproposal generate for each foreach link generate for loop assist proposal generateforloopassistproposal generate iterator link generate for loop assist proposal generateforloopassistproposal generate iterate array generate for loop assist proposal generateforloopassistproposal i compilation unit icompilationunit expression statement expressionstatement current statement currentstatement loop type to generate looptypetogenerate nls i proposal relevance iproposalrelevance generate loop java plugin images javapluginimages java plugin images javapluginimages img correction change f current statement fcurrentstatement current statement currentstatement f current expression fcurrentexpression f current statement fcurrentstatement get expression getexpression f loop type to generate flooptypetogenerate loop type to generate looptypetogenerate f expression type fexpressiontype f current expression fcurrentexpression resolve type binding resolvetypebinding loop type to generate looptypetogenerate generate for loop assist proposal generateforloopassistproposal generate for each foreach set display name setdisplayname correction messages correctionmessages quick assist processor quickassistprocessor generate enhanced loop set relevance setrelevance i proposal relevance iproposalrelevance generate enhanced loop generate for loop assist proposal generateforloopassistproposal generate iterator set display name setdisplayname correction messages correctionmessages quick assist processor quickassistprocessor generate iterator loop generate for loop assist proposal generateforloopassistproposal generate iterate array set display name setdisplayname correction messages correctionmessages quick assist processor quickassistprocessor generate loop generate for loop assist proposal generateforloopassistproposal generate iterate list set display name setdisplayname correction messages correctionmessages quick assist processor quickassistprocessor generate loop override ast rewrite astrewrite get rewrite getrewrite core exception coreexception ast ast f current statement fcurrentstatement getast create import rewrite createimportrewrite compilation unit compilationunit f current expression fcurrentexpression get root getroot f loop type to generate flooptypetogenerate generate for loop assist proposal generateforloopassistproposal generate for each foreach generate for each rewrite generateforeachrewrite ast generate for loop assist proposal generateforloopassistproposal generate iterator generate iterator based for rewrite generateiteratorbasedforrewrite ast generate for loop assist proposal generateforloopassistproposal generate iterate array generate for rewrite generateforrewrite ast generate for loop assist proposal generateforloopassistproposal generate iterate list generate index based for rewrite generateindexbasedforrewrite ast replace statement loop statement loopstatement ast rewrite astrewrite rewrite ast nodes astnodes has semicolon hassemicolon f current statement fcurrentstatement get compilation unit getcompilationunit rewrite replace f current statement fcurrentstatement loop statement loopstatement rewrite replace f current expression fcurrentexpression loop statement loopstatement helper generate code for each foreach code loop iterate link iterable param ast link ast instance rewrite loop complete link ast rewrite astrewrite object ast rewrite astrewrite generate for each rewrite generateforeachrewrite ast ast enhanced for statement enhancedforstatement loop statement loopstatement ast new enhanced for statement newenhancedforstatement ast rewrite astrewrite rewrite ast rewrite astrewrite create ast i type binding itypebinding loop over type loopovertype extract type extracttype ast generate proposals add variable declaration simple name simplename for declaration name fordeclarationname resolve linked variable name with proposals resolvelinkedvariablenamewithproposals rewrite loop over type loopovertype get name getname single variable declaration singlevariabledeclaration for loop initializer forloopinitializer ast new single variable declaration newsinglevariabledeclaration for loop initializer forloopinitializer set type settype get import rewrite getimportrewrite add import addimport loop over type loopovertype ast context sensitive import rewrite context contextsensitiveimportrewritecontext f current statement fcurrentstatement get import rewrite getimportrewrite for loop initializer forloopinitializer set name setname for declaration name fordeclarationname loop statement loopstatement set parameter setparameter for loop initializer forloopinitializer loop statement loopstatement set expression setexpression expression rewrite create copy target createcopytarget f current expression fcurrentexpression block for loop body forloopbody ast new block newblock for loop body forloopbody statements add create blank line statement with cursor position createblanklinestatementwithcursorposition rewrite loop statement loopstatement set body setbody for loop body forloopbody replace loop statement loopstatement rewrite rewrite helper generate iterator based code code loop iterate link iterable param ast link ast instance rewrite loop complete link ast rewrite astrewrite object ast rewrite astrewrite generate iterator based for rewrite generateiteratorbasedforrewrite ast ast ast rewrite astrewrite rewrite ast rewrite astrewrite create ast for statement forstatement loop statement loopstatement ast new for statement newforstatement i type binding itypebinding loop over type loopovertype extract type extracttype ast nls simple name simplename loop variable name loopvariablename resolve linked variable name with proposals resolvelinkedvariablenamewithproposals rewrite iterator loop statement loopstatement initializers add get iterator based for initializer getiteratorbasedforinitializer rewrite loop variable name loopvariablename method invocation methodinvocation loop expression loopexpression ast new method invocation newmethodinvocation nls loop expression loopexpression set name setname ast new simple name newsimplename has next hasnext simple name simplename expression name expressionname ast new simple name newsimplename loop variable name loopvariablename get identifier getidentifier add linked position addlinkedposition rewrite track expression name expressionname linked position group linkedpositiongroup expression name expressionname get identifier getidentifier loop expression loopexpression set expression setexpression expression name expressionname loop statement loopstatement set expression setexpression loop expression loopexpression block for loop body forloopbody ast new block newblock assignment assign resolved variable assignresolvedvariable get iterator based for body assignment getiteratorbasedforbodyassignment rewrite loop over type loopovertype loop variable name loopvariablename for loop body forloopbody statements add ast new expression statement newexpressionstatement assign resolved variable assignresolvedvariable for loop body forloopbody statements add create blank line statement with cursor position createblanklinestatementwithcursorposition rewrite loop statement loopstatement set body setbody for loop body forloopbody replace loop statement loopstatement rewrite rewrite generates initializer iterator based code code loop declares initial izes initializes variable loop param rewrite instance link ast rewrite astrewrite param loop variable name loopvariablename proposed loop variable link variable declaration expression variabledeclarationexpression initializer variable declaration expression variabledeclarationexpression get iterator based for initializer getiteratorbasedforinitializer ast rewrite astrewrite rewrite simple name simplename loop variable name loopvariablename ast ast rewrite getast nls i method binding imethodbinding iterator method binding iteratormethodbinding bindings find method in hierarchy findmethodinhierarchy f expression type fexpressiontype iterator i type binding itypebinding initial izing initializing fragment variable declaration fragment variabledeclarationfragment var declaration fragment vardeclarationfragment ast new variable declaration fragment newvariabledeclarationfragment var declaration fragment vardeclarationfragment set name setname loop variable name loopvariablename method invocation methodinvocation iterator expression iteratorexpression ast new method invocation newmethodinvocation iterator expression iteratorexpression set name setname ast new simple name newsimplename iterator method binding iteratormethodbinding get name getname iterator expression iteratorexpression set expression setexpression expression rewrite create copy target createcopytarget f current expression fcurrentexpression var declaration fragment vardeclarationfragment set initializer setinitializer iterator expression iteratorexpression declaration variable declaration expression variabledeclarationexpression var declaration expression vardeclarationexpression ast new variable declaration expression newvariabledeclarationexpression var declaration fragment vardeclarationfragment var declaration expression vardeclarationexpression set type settype get import rewrite getimportrewrite add import addimport iterator method binding iteratormethodbinding get return type getreturntype ast context sensitive import rewrite context contextsensitiveimportrewritecontext f current statement fcurrentstatement get import rewrite getimportrewrite var declaration expression vardeclarationexpression generates assignment iterator based statement iterator based code code loop body retrieve element link iterable instance param rewrite current instance link ast rewrite astrewrite param loop over type loopovertype link i type binding itypebinding loop variable param loop variable name loopvariablename loop variable link assignment ret rieves retrieves element link iterable active link iterator assignment get iterator based for body assignment getiteratorbasedforbodyassignment ast rewrite astrewrite rewrite i type binding itypebinding loop over type loopovertype simple name simplename loop variable name loopvariablename ast ast rewrite getast assignment assign resolved variable assignresolvedvariable ast new assignment newassignment left hand side simple name simplename resolved variable name resolvedvariablename resolve linked variable name with proposals resolvelinkedvariablenamewithproposals rewrite loop over type loopovertype get name getname loop variable name loopvariablename get identifier getidentifier variable declaration fragment variabledeclarationfragment resolved variable declaration fragment resolvedvariabledeclarationfragment ast new variable declaration fragment newvariabledeclarationfragment resolved variable declaration fragment resolvedvariabledeclarationfragment set name setname resolved variable name resolvedvariablename variable declaration expression variabledeclarationexpression resolved variable declaration resolvedvariabledeclaration ast new variable declaration expression newvariabledeclarationexpression resolved variable declaration fragment resolvedvariabledeclarationfragment resolved variable declaration resolvedvariabledeclaration set type settype get import rewrite getimportrewrite add import addimport loop over type loopovertype ast context sensitive import rewrite context contextsensitiveimportrewritecontext f current statement fcurrentstatement get import rewrite getimportrewrite assign resolved variable assignresolvedvariable set left hand side setlefthandside resolved variable declaration resolvedvariabledeclaration hand side method invocation methodinvocation invoke iterator next expression invokeiteratornextexpression ast new method invocation newmethodinvocation nls invoke iterator next expression invokeiteratornextexpression set name setname ast new simple name newsimplename simple name simplename current element name currentelementname ast new simple name newsimplename loop variable name loopvariablename get identifier getidentifier add linked position addlinkedposition rewrite track current element name currentelementname linked position group linkedpositiongroup current element name currentelementname get identifier getidentifier invoke iterator next expression invokeiteratornextexpression set expression setexpression current element name currentelementname assign resolved variable assignresolvedvariable set right hand side setrighthandside invoke iterator next expression invokeiteratornextexpression assign resolved variable assignresolvedvariable set operator setoperator assignment assign assign resolved variable assignresolvedvariable helper generate based code code loop iterate array param ast current link ast instance generate link ast rewrite astrewrite applicable link ast rewrite astrewrite instance ast rewrite astrewrite generate for rewrite generateforrewrite ast ast ast rewrite astrewrite rewrite ast rewrite astrewrite create ast for statement forstatement loop statement loopstatement ast new for statement newforstatement nls simple name simplename loop variable name loopvariablename resolve linked variable name with proposals resolvelinkedvariablenamewithproposals rewrite loop statement loopstatement initializers add get for initializer getforinitializer ast loop variable name loopvariablename field access fieldaccess get array length expression getarraylengthexpression ast new field access newfieldaccess get array length expression getarraylengthexpression set expression setexpression expression rewrite create copy target createcopytarget f current expression fcurrentexpression nls get array length expression getarraylengthexpression set name setname ast new simple name newsimplename length loop statement loopstatement set expression setexpression get linked infix expression getlinkedinfixexpression rewrite loop variable name loopvariablename get identifier getidentifier get array length expression getarraylengthexpression infix expression infixexpression loop statement loopstatement update rs updaters add get linked increment expression getlinkedincrementexpression rewrite loop variable name loopvariablename get identifier getidentifier block for loop body forloopbody ast new block newblock for loop body forloopbody statements add ast new expression statement newexpressionstatement get for body assignment getforbodyassignment rewrite loop variable name loopvariablename for loop body forloopbody statements add create blank line statement with cursor position createblanklinestatementwithcursorposition rewrite loop statement loopstatement set body setbody for loop body forloopbody replace loop statement loopstatement rewrite rewrite creates link assignment expression app earing appearing code code loop body assignment declares local variable initial izes initializes array current element identified loop param rewrite current link ast rewrite astrewrite instance param loop variable name loopvariablename variable string representation completed link assignment mentioned declaration initialization assignment get for body assignment getforbodyassignment ast rewrite astrewrite rewrite simple name simplename loop variable name loopvariablename ast ast rewrite getast i type binding itypebinding loop over type loopovertype extract type extracttype ast assignment assign resolved variable assignresolvedvariable ast new assignment newassignment left hand side simple name simplename resolved variable name resolvedvariablename resolve linked variable name with proposals resolvelinkedvariablenamewithproposals rewrite loop over type loopovertype get name getname loop variable name loopvariablename get identifier getidentifier variable declaration fragment variabledeclarationfragment resolved variable declaration fragment resolvedvariabledeclarationfragment ast new variable declaration fragment newvariabledeclarationfragment resolved variable declaration fragment resolvedvariabledeclarationfragment set name setname resolved variable name resolvedvariablename variable declaration expression variabledeclarationexpression resolved variable declaration resolvedvariabledeclaration ast new variable declaration expression newvariabledeclarationexpression resolved variable declaration fragment resolvedvariabledeclarationfragment resolved variable declaration resolvedvariabledeclaration set type settype get import rewrite getimportrewrite add import addimport loop over type loopovertype ast context sensitive import rewrite context contextsensitiveimportrewritecontext f current statement fcurrentstatement get import rewrite getimportrewrite assign resolved variable assignresolvedvariable set left hand side setlefthandside resolved variable declaration resolvedvariabledeclaration hand side array access arrayaccess access ast new array access newarrayaccess access set array setarray expression rewrite create copy target createcopytarget f current expression fcurrentexpression simple name simplename index name indexname ast new simple name newsimplename loop variable name loopvariablename get identifier getidentifier add linked position addlinkedposition rewrite track index name indexname linked position group linkedpositiongroup index name indexname get identifier getidentifier access set index setindex index name indexname assign resolved variable assignresolvedvariable set right hand side setrighthandside access assign resolved variable assignresolvedvariable set operator setoperator assignment assign assign resolved variable assignresolvedvariable creates link infix expression infixexpression linked group variable to increment variabletoincrement param rewrite current link ast rewrite astrewrite instance param variable to increment variabletoincrement variable generate link infix expression infixexpression param right hand side righthandside hand side expression included link infix expression infixexpression param link org eclipse jdt core dom infix expression infixexpression link infix expression infixexpression create filled link infix expression infixexpression instance infix expression infixexpression get linked infix expression getlinkedinfixexpression ast rewrite astrewrite rewrite string variable to increment variabletoincrement expression right hand side righthandside infix expression infixexpression ast ast rewrite getast infix expression infixexpression loop expression loopexpression ast new infix expression newinfixexpression simple name simplename ast new simple name newsimplename variable to increment variabletoincrement add linked position addlinkedposition rewrite track linked position group linkedpositiongroup get identifier getidentifier loop expression loopexpression set left operand setleftoperand loop expression loopexpression set operator setoperator loop expression loopexpression set right operand setrightoperand right hand side righthandside loop expression loopexpression creates link postfix expression postfixexpression increment loop variable code code loop iterate array param rewrite current link ast rewrite astrewrite instance param variable to increment variabletoincrement variable increment filled link postfix expression postfixexpression real izing realizing inc rementation incrementation variable expression get linked increment expression getlinkedincrementexpression ast rewrite astrewrite rewrite string variable to increment variabletoincrement ast ast rewrite getast postfix expression postfixexpression increment loop variable incrementloopvariable ast new postfix expression newpostfixexpression simple name simplename ast new simple name newsimplename variable to increment variabletoincrement add linked position addlinkedposition rewrite track linked position group linkedpositiongroup get identifier getidentifier increment loop variable incrementloopvariable set operand setoperand increment loop variable incrementloopvariable set operator setoperator postfix expression postfixexpression increment increment loop variable incrementloopvariable generates link variable declaration expression variabledeclarationexpression initial izes initializes loop variable iterate array param ast current link ast instance param loop variable name loopvariablename variable initialized filled link variable declaration expression variabledeclarationexpression declaring variable initial izes initializes variable declaration expression variabledeclarationexpression get for initializer getforinitializer ast ast simple name simplename loop variable name loopvariablename initial izing initializing fragment variable declaration fragment variabledeclarationfragment first declaration fragment firstdeclarationfragment ast new variable declaration fragment newvariabledeclarationfragment first declaration fragment firstdeclarationfragment set name setname loop variable name loopvariablename number literal numberliteral start index startindex ast new number literal newnumberliteral first declaration fragment firstdeclarationfragment set initializer setinitializer start index startindex declaration variable declaration expression variabledeclarationexpression variable declaration variabledeclaration ast new variable declaration expression newvariabledeclarationexpression first declaration fragment firstdeclarationfragment primitive type primitivetype variable type variabletype ast new primitive type newprimitivetype primitive type primitivetype variable declaration variabledeclaration set type settype variable type variabletype variable declaration variabledeclaration helper generate based code code loop iterate link list implementation param ast current link ast instance generate link ast rewrite astrewrite applicable link ast rewrite astrewrite instance ast rewrite astrewrite generate index based for rewrite generateindexbasedforrewrite ast ast ast rewrite astrewrite rewrite ast rewrite astrewrite create ast for statement forstatement loop statement loopstatement ast new for statement newforstatement nls simple name simplename loop variable name loopvariablename resolve linked variable name with proposals resolvelinkedvariablenamewithproposals rewrite loop statement loopstatement initializers add get for initializer getforinitializer ast loop variable name loopvariablename method invocation methodinvocation list size expression listsizeexpression ast new method invocation newmethodinvocation nls list size expression listsizeexpression set name setname ast new simple name newsimplename size expression list expression listexpression expression rewrite create copy target createcopytarget f current expression fcurrentexpression list size expression listsizeexpression set expression setexpression list expression listexpression loop statement loopstatement set expression setexpression get linked infix expression getlinkedinfixexpression rewrite loop variable name loopvariablename get identifier getidentifier list size expression listsizeexpression infix expression infixexpression loop statement loopstatement update rs updaters add get linked increment expression getlinkedincrementexpression rewrite loop variable name loopvariablename get identifier getidentifier block for loop body forloopbody ast new block newblock for loop body forloopbody statements add ast new expression statement newexpressionstatement get index based for body assignment getindexbasedforbodyassignment rewrite loop variable name loopvariablename for loop body forloopbody statements add create blank line statement with cursor position createblanklinestatementwithcursorposition rewrite loop statement loopstatement set body setbody for loop body forloopbody replace loop statement loopstatement rewrite rewrite creates link assignment expression app earing appearing based code code loop body assignment declares local variable initial izes initializes link list current element identified loop param rewrite current link ast rewrite astrewrite instance param loop variable name loopvariablename variable string representation completed link assignment mentioned declaration initialization expression get index based for body assignment getindexbasedforbodyassignment ast rewrite astrewrite rewrite simple name simplename loop variable name loopvariablename ast ast rewrite getast i type binding itypebinding loop over type loopovertype extract type extracttype ast assignment assign resolved variable assignresolvedvariable ast new assignment newassignment left hand side simple name simplename resolved variable name resolvedvariablename resolve linked variable name with proposals resolvelinkedvariablenamewithproposals rewrite loop over type loopovertype get name getname loop variable name loopvariablename get identifier getidentifier variable declaration fragment variabledeclarationfragment resolved variable declaration fragment resolvedvariabledeclarationfragment ast new variable declaration fragment newvariabledeclarationfragment resolved variable declaration fragment resolvedvariabledeclarationfragment set name setname resolved variable name resolvedvariablename variable declaration expression variabledeclarationexpression resolved variable declaration resolvedvariabledeclaration ast new variable declaration expression newvariabledeclarationexpression resolved variable declaration fragment resolvedvariabledeclarationfragment resolved variable declaration resolvedvariabledeclaration set type settype get import rewrite getimportrewrite add import addimport loop over type loopovertype ast context sensitive import rewrite context contextsensitiveimportrewritecontext f current statement fcurrentstatement get import rewrite getimportrewrite assign resolved variable assignresolvedvariable set left hand side setlefthandside resolved variable declaration resolvedvariabledeclaration hand side method invocation methodinvocation invoke get expression invokegetexpression ast new method invocation newmethodinvocation nls invoke get expression invokegetexpression set name setname ast new simple name newsimplename simple name simplename index variable name indexvariablename ast new simple name newsimplename loop variable name loopvariablename get identifier getidentifier add linked position addlinkedposition rewrite track index variable name indexvariablename linked position group linkedpositiongroup index variable name indexvariablename get identifier getidentifier invoke get expression invokegetexpression arguments add index variable name indexvariablename invoke get expression invokegetexpression set expression setexpression expression rewrite create copy target createcopytarget f current expression fcurrentexpression assign resolved variable assignresolvedvariable set right hand side setrighthandside invoke get expression invokegetexpression assign resolved variable assignresolvedvariable set operator setoperator assignment assign assign resolved variable assignresolvedvariable resolves proposals base name basename adds link linked position linkedposition returned link simple name simplename expression param rewrite current instance link ast rewrite astrewrite param base name basename base string proposal calculation param excluded name excludedname variable code code param first linked proposal firstlinkedproposal generated link linked position linkedposition edit current link compilation unit compilationunit linked link simple name simplename instance based proposals simple name simplename resolve linked variable name with proposals resolvelinkedvariablenamewithproposals ast rewrite astrewrite rewrite string base name basename string excluded name excludedname first linked proposal firstlinkedproposal ast ast rewrite getast string name proposals nameproposals get variable name proposals getvariablenameproposals base name basename excluded name excludedname simple name simplename for declaration name fordeclarationname ast new simple name newsimplename name proposals nameproposals length name proposals nameproposals base name basename name proposals nameproposals length add linked position proposal addlinkedpositionproposal for declaration name fordeclarationname get identifier getidentifier name proposals nameproposals mark declaration editable add linked position addlinkedposition rewrite track for declaration name fordeclarationname first linked proposal firstlinkedproposal for declaration name fordeclarationname get identifier getidentifier for declaration name fordeclarationname generates empty statement blank position cursor param rewrite current link ast rewrite astrewrite instance empty statement blank statement create blank line statement with cursor position createblanklinestatementwithcursorposition ast rewrite astrewrite rewrite nls statement blank line statement blanklinestatement statement rewrite create string placeholder createstringplaceholder ast node astnode empty statement set end position setendposition rewrite track blank line statement blanklinestatement blank line statement blanklinestatement retrieves proposals fresh local variable param base name basename base name basename proposals param excluded name excludedname variable code code array proposal strings string get variable name proposals getvariablenameproposals string base name basename string excluded name excludedname ast node astnode surrounding block surroundingblock f current statement fcurrentstatement surrounding block surroundingblock surrounding block surroundingblock get parent getparent surrounding block surroundingblock block collection string local used names localusednames scope analyzer scopeanalyzer compilation unit compilationunit f current expression fcurrentexpression get root getroot get used variable names getusedvariablenames surrounding block surroundingblock get start position getstartposition surrounding block surroundingblock get length getlength excluded name excludedname local used names localusednames add excluded name excludedname string names stub utility stubutility get local name suggestions getlocalnamesuggestions get compilation unit getcompilationunit get java project getjavaproject base name basename local used names localusednames to array toarray string local used names localusednames size names extra cts extracts type parameter variable contained f current expression fcurrentexpression elements type iterate array code for each foreach code param ast current link ast instance link i type binding itypebinding elements iterate i type binding itypebinding extract type extracttype ast ast f expression type fexpressiontype is array isarray bindings normalize for declaration use normalizefordeclarationuse f expression type fexpressiontype get component type getcomponenttype ast extract elements type bindings nls i method binding imethodbinding iterator method binding iteratormethodbinding bindings find method in hierarchy findmethodinhierarchy f expression type fexpressiontype iterator i type binding itypebinding nls i method binding imethodbinding iterator next method binding iteratornextmethodbinding bindings find method in hierarchy findmethodinhierarchy iterator method binding iteratormethodbinding get return type getreturntype i type binding itypebinding i type binding itypebinding current element binding currentelementbinding iterator next method binding iteratornextmethodbinding get return type getreturntype bindings normalize for declaration use normalizefordeclarationuse current element binding currentelementbinding ast