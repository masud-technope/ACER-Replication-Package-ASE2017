copyright ibm corporation rights reserved program accompanying materials terms eclipse license accompanies distribution http eclipse org legal epl html contributors ibm corporation initial api implementation sergey prigogin eclipse sprigogin gmail refactoring provide implement refactorings depend resources explicitly released https bugs eclipse org org eclipse ltk core refactoring org eclipse core runtime org eclipse core runtime core exception coreexception org eclipse ltk core refactoring history i refactoring execution listener irefactoringexecutionlistener org eclipse ltk core refactoring history i refactoring history listener irefactoringhistorylistener org eclipse ltk core refactoring history i refactoring history service irefactoringhistoryservice descriptor object refactoring refactoring descriptor refactoring specific data framework completely rec onstruct reconstruct refactoring instance execute arbitrary workspace refactoring descriptors description string human readable text designed displayed user represent refactoring trees lists descriptions automatically generated refactorings optional comment string full human readable description refactoring comments automatically generated refactorings provide refactoring specific elements part icipated participated refactoring refactoring descriptor flags framework capabilities properties refactorings executed remote context timestamp measured milliseconds january gmt denotes original execution time refactoring unique denotes kind refactoring rename file comp osed composed plugin identifier contributing plugin plugin wide unique identifier code org eclipse ltk core refactoring rename file renamefile code optional project refactoring note project refactoring single project refactoring descriptor read file project refactoring descriptors identified refactoring link getid time stamps link get time stamp gettimestamp heavy weight objects held refactoring descriptor proxies link refactoring descriptor proxy refactoringdescriptorproxy refactoring descriptors user manipulate refactoring histories clients create specific refactoring descriptors change generation choose info rmative informative human readable description refactoring instance pass descriptor flags constructor details refactoring revealed comment text refactoring specific refactoring descriptors provide version resp onsibility responsibility client enhance subclasses refactoring version order provide schema evolution time stamps measured milliseconds january gmt note indented subclassed clients provide special ized specialized refactoring descriptors refactorings refactoring descriptor proxy refactoringdescriptorproxy i refactoring history service irefactoringhistoryservice refactoring descriptor refactoringdescriptor comparable refactoring descriptor refactoringdescriptor constant describing api change flag code code clients flag represented refactoring breaking api clients link breaking change flag link structural change typically refactorings change elements marked api semantics program min g programming language flag flag refactoring framework determine refactoring existing api rep layed replayed clients breaking change unknown refactoring code org eclipse ltk core refactoring unknown code reserved refactoring framework signal refactoring performed deliver refactoring descriptor link change get descriptor getdescriptor method refactoring history service returns unknown refactorings consistency reasons reported link i refactoring execution listener irefactoringexecutionlistener link i refactoring history listener irefactoringhistorylistener order clients listeners workbench operation history nls string unknown org eclipse ltk core refactoring unknown constant describing multi change flag code code clients flag change created represented refactoring files files input elements semantics program min g programming language typically refactorings update references ref actored refactored element flag flag team synchronize operations optimize processing refactorings multi change constant describing absence flags code code constant describing structural change flag code code clients flag change created represented refactoring structural change semantics program min g programming language typically refactorings elements element declares ref actored refactored element flag flag language specific tools determine refactoring impact client code structural change constant describing user flag code code constant intended refactoring descriptors clients constant define user defined flags int eger integer values greater constant clients constant user change comment refactoring code code comment string f comment fcomment empty description refactoring string f description fdescription flags refactoring code code f flags fflags project code code project string f project fproject unique refactoring string f refactoring id frefactoringid time stamp code code time refactoring f time stamp ftimestamp creates refactoring descriptor param unique refactoring param project empty project refactoring code code workspace refactoring param description empty human readable description refactoring instance param comment human readable comment refactoring instance code code comment param flags flags refactoring descriptor refactoring descriptor refactoringdescriptor string string project string description string comment flags is not null isnotnull nls nls is legal islegal equals refactoring empty nls nls is legal islegal project equals project project empty is not null isnotnull description nls nls is legal islegal equals description description empty nls is legal islegal flags flags negative f refactoring id frefactoringid f description fdescription description f project fproject project f comment fcomment comment f flags fflags flags inherit doc inheritdoc override compare to compareto refactoring descriptor refactoringdescriptor descriptor delta f time stamp ftimestamp descriptor f time stamp ftimestamp delta delta creates refactoring instance refactoring descriptor returned refactoring initialized ready executed link perform refactoring operation performrefactoringoperation method intended called code belong subclasses external code call link create refactoring context createrefactoringcontext refactoring status refactoringstatus refactoring object refactoring context param status refactoring status describe out come outcome initialization refactoring code code refactoring descriptor represents unknown refactoring refactoring contribution refactoring descriptor capable create refactoring core exception coreexception error occurs creating refactoring instance refactoring create refactoring createrefactoring refactoring status refactoringstatus status core exception coreexception creates refactoring context refactoring instance refactoring descriptor method refactoring framework instantiate refactoring refactoring descriptor order apply local remote workspace implementation method wraps refactoring trivial refactoring context subclasses override method create custom refactoring context param status refactoring status describe out come outcome initialization refactoring context code code refactoring descriptor represents unknown refactoring refactoring contribution refactoring descriptor capable create refactoring core exception coreexception error occurs creating refactoring context refactoring context refactoringcontext create refactoring context createrefactoringcontext refactoring status refactoringstatus status core exception coreexception refactoring refactoring create refactoring createrefactoring status refactoring refactoring context refactoringcontext refactoring override equals object object object refactoring descriptor refactoringdescriptor refactoring descriptor refactoringdescriptor descriptor refactoring descriptor refactoringdescriptor object f time stamp ftimestamp descriptor f time stamp ftimestamp get description getdescription equals descriptor get description getdescription returns details comment user additional details performed refactoring details comment empty string string get comment getcomment nls f comment fcomment f comment fcomment returns description label refactoring user description string get description getdescription f description fdescription returns flags flags get flags getflags f flags fflags returns refactoring refactoring string getid f refactoring id frefactoringid returns project empty project code code string get project getproject f project fproject returns time stamp time stamp code code time get time stamp gettimestamp f time stamp ftimestamp override hash code hashcode code get description getdescription hash code hashcode f time stamp ftimestamp code f time stamp ftimestamp code sets details comment refactoring note api extended reimplemented called refactoring framework param comment comment code code comment set comment setcomment string comment f comment fcomment comment sets description refactoring note api extended reimplemented called refactoring framework param description empty description refactoring set description setdescription string description is not null isnotnull description nls nls is legal islegal equals description description empty f description fdescription description sets flags refactoring note api extended reimplemented called refactoring framework param flags flags code code clear flags set flags setflags flags nls is legal islegal flags flags negative f flags fflags flags sets project refactoring note api extended reimplemented called refactoring framework param project empty project code code workspace set project setproject string project nls nls is legal islegal project equals project project empty f project fproject project sets time stamp refactoring method called note api extended reimplemented called refactoring framework param stamp time stamp set time stamp settimestamp stamp is true istrue stamp f time stamp ftimestamp stamp override string to string tostring string buffer stringbuffer buffer string buffer stringbuffer buffer append get class getclass get name getname f refactoring id frefactoringid equals unknown nls buffer append unknown refactoring nls buffer append time stamp timestamp buffer append f time stamp ftimestamp nls buffer append buffer append f refactoring id frefactoringid nls buffer append description buffer append f description fdescription nls buffer append project buffer append f project fproject nls buffer append comment buffer append f comment fcomment nls buffer append flags buffer append f flags fflags nls buffer append buffer to string tostring